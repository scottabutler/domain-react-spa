{"version":3,"sources":["components/numericSearchField/index.tsx","components/search/index.tsx","components/newTabLink/index.tsx","components/footer/index.tsx","components/agentDetails/index.tsx","components/agencyDetails/index.tsx","components/simpleCarousel/index.tsx","utils/localStorageHelper.ts","utils/dateTimeHelper.ts","components/inspectionTimes/index.tsx","components/searchResult/index.tsx","data/stopsLatLon.js","utils/distance.js","App.tsx","index.tsx"],"names":["NumericSearchField","props","defaultValue","updateHandler","interval","icon","type","suffix","text","toLocaleString","className","onClick","Search","suburbs","updateSuburbs","minBeds","updateMinBeds","minBaths","updateMinBaths","minCarSpaces","updateMinCarSpaces","maxPrice","updateMaxPrice","maxDistanceFromTrain","updateMaxDistanceFromTrain","runSearch","id","htmlFor","rows","placeholder","onChange","onBlur","value","disabled","NewTabLink","href","label","target","rel","Footer","AgentDetails","name","photoUrl","Fragment","key","src","AgencyDetails","rgb","logoUrl","preferredColourHex","contacts","useState","open","setOpen","agentBackgroundColour","agentTextColour","hex","withoutHash","replaceAll","length","substr","map","x","parseInt","hexToRgb","style","backgroundColor","color","border","SimpleCarousel","urls","altText","index","setIndex","count","previousIndex","current","getPreviousIndex","nextIndex","getNextIndex","dots","i","imgStyle","backgroundImage","previousImage","display","nextImage","title","getArchivedDataFromLocalStorage","JSON","parse","localStorage","getItem","isArchivedInStorage","storageData","saveSearchParamsToLocalStorage","maxDistFromTrain","suburbCsv","window","setItem","stringify","getTwelveHourTime","dateTime","Date","hour","minute","hour12","getShortDateAndTime","startTime","getRelativeShortDate","getShortDate","startDate","day","date","Intl","DateTimeFormat","weekday","format","getShortDay","getDate","month","getShortMonth","getMonth","lowercase","today","tomorrow","setDate","setHours","dayAfterTomorrow","monthIndex","InspectionTimes","inspectionSchedule","auctionSchedule","inspectionTimesOpen","setInspectionTimesOpen","times","filter","openingTime","isAuctionTimeInFuture","time","startDateTime","endDateTime","startDateTimeString","endTime","getDateRange","closingTime","SearchResult","closestStops","data","showArchived","listing","listingSlug","isArchived","setIsArchived","streetAddress","propertyDetails","unitNumber","streetNumber","street","imageAltText","agent","advertiser","closestStopsMarkup","stop","y","stop_name","replace","Math","round","distance","latitude","longitude","imageUrls","media","category","url","propertyType","description","toLowerCase","indexOf","RegExp","test","numericUnitNumber","parsePropertyType","summaryDescription","openTimes","openTime","undefined","auctionDate","priceDetails","displayPrice","suburb","state","postcode","bedrooms","bathrooms","carspaces","archive","storedData","saveInLocalStorage","stops","getDistanceFromLatLonInKm","lat1","lon1","lat2","lon2","dLat","deg2rad","dLon","a","sin","cos","atan2","sqrt","deg","PI","findClosestStops","lat","lon","nearbyStops","lonDiff","stop_longitude","latDiff","stop_latitude","push","sort","b","getQueryVariable","variable","vars","location","search","substring","split","pair","App","suburbsFromQueryString","savedSearchParams","loadSearchParamsFromLocalStorage","defaultSuburbs","decodeURI","React","setSuburbs","setMinBeds","setMinBaths","setMinCarSpaces","setMaxPrice","setMaxDistanceFromTrain","Array","results","setResults","searchResultList","setSearchResultList","isLoading","setIsLoading","setShowArchived","requestedSuburbs","setRequestedSuburbs","suburbCountsString","setSuburbCountsString","resultsCount","setResultsCount","setResultsWithClosestStops","r","resultsWithClosestStops","reqSuburbs","trim","join","suburbArray","s","axios","post","then","catch","err","console","error","get","spinner","role","toTitleCase","input","w","toUpperCase","useEffect","list","suburbCounts","hiddenResultCount","upperCaseSuburb","orderedSuburbCounts","obj","sorted","Object","keys","result","k","sortedKey","orderObjectPropertiesByCount","counts","requestedSuburbsArray","find","evt","setFunc","currentTarget","setStateFromChangeEvent","val","defaultChecked","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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kB,YACjB,CACD,YAAe,UACf,UAAa,kBACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,SACf,UAAa,iBACb,eAAkB,WAClB,eAAkB,SACjB,CACD,YAAe,QACf,UAAa,gBACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,cACf,UAAa,sBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,uBACf,UAAa,+BACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,eACf,UAAa,uBACb,eAAkB,SAClB,eAAkB,WACjB,CACD,YAAe,iBACf,UAAa,yBACb,eAAkB,QAClB,eAAkB,YACjB,CACD,YAAe,UACf,UAAa,kBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,aACf,UAAa,qBACb,eAAkB,SAClB,eAAkB,UACjB,CACD,YAAe,UACf,UAAa,kBACb,eAAkB,SAClB,eAAkB,UACjB,CACD,YAAe,SACf,UAAa,iBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,YACf,UAAa,oBACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,mBACf,UAAa,uBACb,eAAkB,WAClB,eAAkB,UACjB,CACD,YAAe,gBACf,UAAa,wBACb,eAAkB,SAClB,eAAkB,UACjB,CACD,YAAe,WACf,UAAa,mBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,YACf,UAAa,oBACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,WACf,UAAa,mBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,aACf,UAAa,sBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,WACf,UAAa,sBACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,YACf,UAAa,oBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,aACf,UAAa,qBACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,UACf,UAAa,kBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,cACf,UAAa,sBACb,eAAkB,QAClB,eAAkB,YACjB,CACD,YAAe,aACf,UAAa,mBACb,eAAkB,WAClB,eAAkB,UACjB,CACD,YAAe,aACf,UAAa,mBACb,eAAkB,WAClB,eAAkB,UACjB,CACD,YAAe,QACf,UAAa,gBACb,eAAkB,WAClB,eAAkB,UACjB,CACD,YAAe,WACf,UAAa,mBACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,cACf,UAAa,sBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,UACf,UAAa,kBACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,aACf,UAAa,qBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,aACf,UAAa,qBACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,aACf,UAAa,qBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,aACf,UAAa,uBACb,eAAkB,QAClB,eAAkB,YACjB,CACD,YAAe,gBACf,UAAa,wBACb,eAAkB,QAClB,eAAkB,YACjB,CACD,YAAe,SACf,UAAa,iBACb,eAAkB,UAClB,eAAkB,YACjB,CACD,YAAe,gBACf,UAAa,wBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,aACf,UAAa,qBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,YACf,UAAa,oBACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,gBACf,UAAa,iBACb,eAAkB,SAClB,eAAkB,WACjB,CACD,YAAe,SACf,UAAa,iBACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,YACf,UAAa,mBACb,eAAkB,WAClB,eAAkB,UACjB,CACD,YAAe,YACf,UAAa,mBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,gBACf,UAAa,kBACb,eAAkB,SAClB,eAAkB,WACjB,CACD,YAAe,UACf,UAAa,mBACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,UACf,UAAa,kBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,iBACf,UAAa,yBACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,YACf,UAAa,oBACb,eAAkB,WAClB,eAAkB,WACjB,CACD,YAAe,SACf,UAAa,iBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,cACf,UAAa,sBACb,eAAkB,WAClB,eAAkB,UACjB,CACD,YAAe,WACf,UAAa,mBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,UACf,UAAa,kBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,WACf,UAAa,mBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,UACf,UAAa,kBACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,iBACf,UAAa,sBACb,eAAkB,QAClB,eAAkB,YACjB,CACD,YAAe,YACf,UAAa,oBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,gBACf,UAAa,wBACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,cACf,UAAa,sBACb,eAAkB,WAClB,eAAkB,WACjB,CACD,YAAe,WACf,UAAa,sBACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,YACf,UAAa,oBACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,SACf,UAAa,iBACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,eACf,UAAa,uBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,eACf,UAAa,oBACb,eAAkB,WAClB,eAAkB,UACjB,CACD,YAAe,eACf,UAAa,uBACb,eAAkB,UAClB,eAAkB,YACjB,CACD,YAAe,eACf,UAAa,qBACb,eAAkB,QAClB,eAAkB,YACjB,CACD,YAAe,eACf,UAAa,kBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,WACf,UAAa,mBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,aACf,UAAa,qBACb,eAAkB,UAClB,eAAkB,YACjB,CACD,YAAe,WACf,UAAa,mBACb,eAAkB,WAClB,eAAkB,UACjB,CACD,YAAe,YACf,UAAa,oBACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,aACf,UAAa,qBACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,YACf,UAAa,kBACb,eAAkB,WAClB,eAAkB,UACjB,CACD,YAAe,YACf,UAAa,kBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,aACf,UAAa,qBACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,WACf,UAAa,mBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,aACf,UAAa,mBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,aACf,UAAa,mBACb,eAAkB,WAClB,eAAkB,UACjB,CACD,YAAe,aACf,UAAa,qBACb,eAAkB,QAClB,eAAkB,YACjB,CACD,YAAe,eACf,UAAa,uBACb,eAAkB,SAClB,eAAkB,UACjB,CACD,YAAe,UACf,UAAa,kBACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,aACf,UAAa,0BACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,cACf,UAAa,sBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,eACf,UAAa,uBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,UACf,UAAa,kBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,UACf,UAAa,kBACb,eAAkB,WAClB,eAAkB,WACjB,CACD,YAAe,eACf,UAAa,kBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,aACf,UAAa,qBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,aACf,UAAa,qBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,WACf,UAAa,mBACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,YACf,UAAa,oBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,aACf,UAAa,qBACb,eAAkB,WAClB,eAAkB,WACjB,CACD,YAAe,YACf,UAAa,oBACb,eAAkB,WAClB,eAAkB,WACjB,CACD,YAAe,YACf,UAAa,mBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,aACf,UAAa,oBACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,gBACf,UAAa,iBACb,eAAkB,QAClB,eAAkB,YACjB,CACD,YAAe,UACf,UAAa,kBACb,eAAkB,UAClB,eAAkB,YACjB,CACD,YAAe,iBACf,UAAa,oBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,cACf,UAAa,qBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,UACf,UAAa,kBACb,eAAkB,WAClB,eAAkB,WACjB,CACD,YAAe,UACf,UAAa,mBACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,SACf,UAAa,iBACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,UACf,UAAa,kBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,WACf,UAAa,mBACb,eAAkB,UAClB,eAAkB,UACjB,CACD,YAAe,YACf,UAAa,oBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,YACf,UAAa,oBACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,WACf,UAAa,qBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,YACf,UAAa,oBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,UACf,UAAa,kBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,aACf,UAAa,qBACb,eAAkB,WAClB,eAAkB,WACjB,CACD,YAAe,SACf,UAAa,iBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,UACf,UAAa,kBACb,eAAkB,SAClB,eAAkB,UACjB,CACD,YAAe,WACf,UAAa,mBACb,eAAkB,WAClB,eAAkB,UACjB,CACD,YAAe,SACf,UAAa,oBACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,WACf,UAAa,mBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,QACf,UAAa,gBACb,eAAkB,SAClB,eAAkB,UACjB,CACD,YAAe,YACf,UAAa,oBACb,eAAkB,WAClB,eAAkB,UACjB,CACD,YAAe,aACf,UAAa,qBACb,eAAkB,UAClB,eAAkB,YACjB,CACD,YAAe,WACf,UAAa,iBACb,eAAkB,SAClB,eAAkB,UACjB,CACD,YAAe,aACf,UAAa,oBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,YACf,UAAa,kBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,YACf,UAAa,iBACb,eAAkB,WAClB,eAAkB,WACjB,CACD,YAAe,UACf,UAAa,kBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,YACf,UAAa,oBACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,cACf,UAAa,sBACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,WACf,UAAa,qBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,YACf,UAAa,iBACb,eAAkB,QAClB,eAAkB,YACjB,CACD,YAAe,WACf,UAAa,yBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,cACf,UAAa,oBACb,eAAkB,UAClB,eAAkB,YACjB,CACD,YAAe,UACf,UAAa,kBACb,eAAkB,UAClB,eAAkB,YACjB,CACD,YAAe,cACf,UAAa,sBACb,eAAkB,SAClB,eAAkB,UACjB,CACD,YAAe,UACf,UAAa,kBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,UACf,UAAa,eACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,YACf,UAAa,oBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,YACf,UAAa,oBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,WACf,UAAa,wBACb,eAAkB,WAClB,eAAkB,WACjB,CACD,YAAe,YACf,UAAa,kBACb,eAAkB,QAClB,eAAkB,YACjB,CACD,YAAe,WACf,UAAa,0BACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,eACf,UAAa,uBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,YACf,UAAa,oBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,YACf,UAAa,oBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,aACf,UAAa,wBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,aACf,UAAa,sBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,YACf,UAAa,oBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,YACf,UAAa,gBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,WACf,UAAa,yBACb,eAAkB,WAClB,eAAkB,UACjB,CACD,YAAe,gBACf,UAAa,kBACb,eAAkB,SAClB,eAAkB,UACjB,CACD,YAAe,cACf,UAAa,sBACb,eAAkB,WAClB,eAAkB,WACjB,CACD,YAAe,UACf,UAAa,kBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,WACf,UAAa,wBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,WACf,UAAa,mBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,UACf,UAAa,kBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,WACf,UAAa,yBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,iBACf,UAAa,uBACb,eAAkB,SAClB,eAAkB,UACjB,CACD,YAAe,iBACf,UAAa,qBACb,eAAkB,WAClB,eAAkB,UACjB,CACD,YAAe,iBACf,UAAa,0BACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,SACf,UAAa,iBACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,eACf,UAAa,iBACb,eAAkB,WAClB,eAAkB,WACjB,CACD,YAAe,iBACf,UAAa,4BACb,eAAkB,WAClB,eAAkB,UACjB,CACD,YAAe,SACf,UAAa,mBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,eACf,UAAa,qBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,YACf,UAAa,iBACb,eAAkB,SAClB,eAAkB,UACjB,CACD,YAAe,UACf,UAAa,kBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,YACf,UAAa,oBACb,eAAkB,SAClB,eAAkB,UACjB,CACD,YAAe,UACf,UAAa,iBACb,eAAkB,UAClB,eAAkB,YACjB,CACD,YAAe,YACf,UAAa,iBACb,eAAkB,WAClB,eAAkB,WACjB,CACD,YAAe,iBACf,UAAa,oBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,iBACf,UAAa,yBACb,eAAkB,WAClB,eAAkB,WACjB,CACD,YAAe,YACf,UAAa,qBACb,eAAkB,WAClB,eAAkB,UACjB,CACD,YAAe,WACf,UAAa,kBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,cACf,UAAa,sBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,iBACf,UAAa,0BACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,kBACf,UAAa,4BACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,kBACf,UAAa,mBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,gBACf,UAAa,wBACb,eAAkB,WAClB,eAAkB,WACjB,CACD,YAAe,aACf,UAAa,qBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,aACf,UAAa,oBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,cACf,UAAa,sBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,aACf,UAAa,qBACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,WACf,UAAa,mBACb,eAAkB,OAClB,eAAkB,YACjB,CACD,YAAe,aACf,UAAa,2BACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,aACf,UAAa,qBACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,WACf,UAAa,mBACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,WACf,UAAa,qBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,eACf,UAAa,uBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,eACf,UAAa,uBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,UACf,UAAa,kBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,WACf,UAAa,mBACb,eAAkB,SAClB,eAAkB,UACjB,CACD,YAAe,UACf,UAAa,iBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,aACf,UAAa,gCACb,eAAkB,WAClB,eAAkB,UACjB,CACD,YAAe,eACf,UAAa,uBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,YACf,UAAa,oBACb,eAAkB,WAClB,eAAkB,UACjB,CACD,YAAe,SACf,UAAa,iBACb,eAAkB,WAClB,eAAkB,WACjB,CACD,YAAe,eACf,UAAa,6BACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,YACf,UAAa,2BACb,eAAkB,QAClB,eAAkB,YACjB,CACD,YAAe,aACf,UAAa,qBACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,eACf,UAAa,6BACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,YACf,UAAa,oBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,iBACf,UAAa,yBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,UACf,UAAa,kBACb,eAAkB,WAClB,eAAkB,UACjB,CACD,YAAe,iBACf,UAAa,oBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,WACf,UAAa,mBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,WACf,UAAa,mBACb,eAAkB,WAClB,eAAkB,WACjB,CACD,YAAe,SACf,UAAa,iBACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,iBACf,UAAa,iBACb,eAAkB,WAClB,eAAkB,UACjB,CACD,YAAe,SACf,UAAa,kBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,YACf,UAAa,kBACb,eAAkB,UAClB,eAAkB,YACjB,CACD,YAAe,YACf,UAAa,oBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,YACf,UAAa,wBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,WACf,UAAa,uBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,WACf,UAAa,mBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,WACf,UAAa,mBACb,eAAkB,WAClB,eAAkB,UACjB,CACD,YAAe,mBACf,UAAa,2BACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,UACf,UAAa,kBACb,eAAkB,SAClB,eAAkB,YACjB,CACD,YAAe,eACf,UAAa,uBACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,mBACf,UAAa,2BACb,eAAkB,WAClB,eAAkB,YACjB,CACD,YAAe,WACf,UAAa,mBACb,eAAkB,WAClB,eAAkB,aC7kCpB,SAASC,EAA0B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","file":"static/js/main.830c0787.chunk.js","sourcesContent":["import React from 'react';\r\nimport './numericSearchField.scss';\r\n\r\nfunction NumericSearchField(props: any) {\r\n    const { defaultValue, updateHandler, interval, icon, type, suffix } = props;\r\n\r\n    const decrement = function() {\r\n        if (defaultValue - interval >= 0) {\r\n            updateHandler(defaultValue - interval);\r\n        }\r\n    }\r\n\r\n    const increment = function() {\r\n        updateHandler(defaultValue + interval);\r\n    }\r\n\r\n    let text = defaultValue.toLocaleString();\r\n    switch (type) {\r\n        case \"min\":\r\n            text = `${text}+`;\r\n            break;\r\n        case \"max\":\r\n            text = `<${text}`;\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-sm-4 col-md-1 numeric-search-field mb-2 px-3\">\r\n            <div className=\"align-bottom controls mt-2 px-0\">\r\n                <button className=\"down bg-light text-dark p-1 border border-secondary rounded-left d-inline-block\" onClick={decrement}>-</button>\r\n                <span className=\"value px-2 py-1 border-top border-bottom border-secondary d-inline-block\"><i className={`${icon} float-left`} />{text}{suffix ?? ''}</span>\r\n                <button className=\"up bg-light text-dark p-1 border border-secondary rounded-right d-inline-block\" onClick={increment}>+</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NumericSearchField;","import React from 'react';\r\nimport NumericSearchField from '../numericSearchField';\r\nimport './search.scss';\r\nimport SuburbSearch from '../suburbSearch';\r\n\r\nfunction Search(props: any) {\r\n    const {\r\n        suburbs, updateSuburbs,\r\n        minBeds, updateMinBeds,\r\n        minBaths, updateMinBaths,\r\n        minCarSpaces, updateMinCarSpaces,\r\n        maxPrice, updateMaxPrice,\r\n        maxDistanceFromTrain, updateMaxDistanceFromTrain,\r\n        runSearch\r\n    } = props;\r\n\r\n    return (\r\n        <div id=\"search\" className=\"p-2\">\r\n            {/* <span className=\"d-inline-block d-sm-none\">XS</span>\r\n            <span className=\"d-none d-sm-inline-block d-md-none\">SM</span>\r\n            <span className=\"d-none d-md-inline-block d-lg-none\">MD</span>\r\n            <span className=\"d-none d-lg-inline-block d-xl-none\">LG</span>\r\n            <span className=\"d-none d-xl-inline-block\">XL</span> */}\r\n            <div className=\"row mb-2\">\r\n                <div className=\"col-12\">\r\n                    <label htmlFor=\"state\">State: Victoria</label>\r\n                </div>\r\n                {/* <div className=\"col\">\r\n                    <input id=\"state\" type=\"text\" value=\"VIC\" disabled />\r\n                </div> */}\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-8 col-sm-6 col-md-6 col-lg-4\">\r\n                    <textarea id=\"suburb\" className=\"border-secondary\" rows={1} placeholder=\"Suburb(s) e.g Kew, Rye\" defaultValue={suburbs} onChange={updateSuburbs} onBlur={updateSuburbs} />\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <NumericSearchField type=\"min\" icon=\"icon-bed\" defaultValue={minBeds} updateHandler={updateMinBeds} interval={1} />\r\n                <NumericSearchField type=\"min\" icon=\"icon-bath\" defaultValue={minBaths} updateHandler={updateMinBaths} interval={1} />\r\n                <NumericSearchField type=\"min\" icon=\"icon-cab\" defaultValue={minCarSpaces} updateHandler={updateMinCarSpaces} interval={1} />\r\n                <NumericSearchField type=\"max\" icon=\"icon-dollar\" defaultValue={maxPrice} updateHandler={updateMaxPrice} interval={10000} />\r\n                <NumericSearchField type=\"max\" icon=\"icon-train\" defaultValue={maxDistanceFromTrain} updateHandler={updateMaxDistanceFromTrain} interval={0.25} suffix=' km' />\r\n\r\n                <div className=\"col-sm-6, col-md-2\">\r\n                    <div className=\"mt-2\">\r\n                        <input type=\"button\" className=\"search-button\" value=\"Search\" onClick={runSearch} disabled={!suburbs} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\n\r\nfunction NewTabLink(props) {\r\n    const {href, label, className} = props;\r\n    return (\r\n        <>\r\n            <a href={href} target=\"_blank\" rel=\"noopener noreferrer\" className={className}>{label}</a>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NewTabLink;","import React from 'react';\r\nimport NewTabLink from '../newTabLink'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <>\r\n            <div id=\"footer\" className=\"mb-2 p-2\">\r\n                <p className=\"mb-0\">\r\n                    &copy; 2022 <NewTabLink href=\"https://github.com/scottabutler/\" label=\"Scott Butler\" />. This site uses API data from <NewTabLink href=\"https://developer.domain.com.au/docs/introduction\" label=\"Domain\" /> and is subject to their <NewTabLink href=\"https://developer.domain.com.au/docs/support/terms\" label=\"terms of use\" />.\r\n                </p>\r\n                <p>\r\n                    Icons provided by <NewTabLink href=\"https://fontawesome.com/\" label=\"FontAwesome\" /> and bundled using <NewTabLink href=\"http://fontello.com/\" label=\"Fontello\" />.\r\n                </p>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction AgentDetails(props: {\r\n    id: string,\r\n    name: string,\r\n    photoUrl?: string,\r\n}) {\r\n    const { id, name, photoUrl } = props;\r\n\r\n    return (\r\n        <React.Fragment key={id}>\r\n            {(name || photoUrl) &&\r\n            <div className=\"w-50 d-inline-block text-center\">\r\n                <img className=\"agent-photo\" src={photoUrl} /><br />\r\n                {name &&\r\n                <span className=\"agent-name\">{name}</span>\r\n                }\r\n            </div>\r\n            }\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default AgentDetails;","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { Contact } from '../../types/domain';\r\nimport AgentDetails from '../agentDetails';\r\nimport './agencyDetails.scss';\r\n\r\nfunction AgencyDetails(props: {\r\n    id: string,\r\n    name: string,\r\n    logoUrl?: string,\r\n    preferredColourHex: string,\r\n    contacts?: Contact[]\r\n}) {\r\n    const { id, name, logoUrl, preferredColourHex, contacts } = props;\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const agentBackgroundColour = preferredColourHex;\r\n    const agentTextColour = calculateTextColourForBackgroundColour(hexToRgb(agentBackgroundColour));\r\n\r\n    return (\r\n        <React.Fragment key={id}>\r\n            <div className={`agency-details px-3 ${open ? \"open\" : \"closed\"}`} style={{backgroundColor: agentBackgroundColour, color: agentTextColour}}>\r\n                <span className=\"toggle mr-2\" onClick={() => setOpen(!open)}><i className={`icon-${open ? \"up\" : \"down\"}-open`} /></span>\r\n                {!logoUrl &&\r\n                <span className=\"agency-name\">{name}</span>\r\n                }\r\n                {logoUrl &&\r\n                <img className=\"agency-logo\" src={logoUrl} />\r\n                }\r\n                {!open && contacts && contacts[0] && contacts[0].photoUrl &&\r\n                <img className=\"agent-photo\" style={{border: `3px solid ${agentBackgroundColour}`}} src={contacts[0].photoUrl} />\r\n                }\r\n                {open &&\r\n                <React.Fragment>\r\n                    {contacts &&\r\n                        <div className=\"py-3\">\r\n                            {contacts[0] &&\r\n                            <AgentDetails id={`${id}-agent-0`} name={contacts[0].name} photoUrl={contacts[0].photoUrl} />\r\n                            }\r\n                            {contacts[1] &&\r\n                            <AgentDetails id={`${id}-agent-1`} name={contacts[1].name} photoUrl={contacts[1].photoUrl} />\r\n                            }\r\n                        </div>\r\n                    }\r\n                    <div className=\"info mb-2\">\r\n                        <span>{name}</span>\r\n                    </div>\r\n                </React.Fragment>\r\n                }\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nfunction hexToRgb(hex: string): number[] {\r\n    const withoutHash = hex.replaceAll('#', '');\r\n    const parts = withoutHash.length === 3\r\n        ? [ withoutHash[0], withoutHash[1], withoutHash[2] ]\r\n        : [ withoutHash.substr(0, 2), withoutHash.substr(2, 2), withoutHash.substr(4, 2) ];\r\n    return parts.map((x) => parseInt(`0x${x}`, 16));\r\n}\r\n\r\n// https://stackoverflow.com/a/3943023\r\nfunction calculateTextColourForBackgroundColour(rgb: number[]): string {\r\n    return (rgb[0]*0.299 + rgb[1]*0.587 + rgb[2]*0.114) > 186\r\n        ? \"#000000\"\r\n        : \"#ffffff\";\r\n}\r\n\r\nexport default AgencyDetails;","import React from 'react';\r\nimport { useState } from 'react';\r\nimport './simpleCarousel.scss';\r\n\r\nfunction SimpleCarousel(props: { id: string, urls: string[], altText: string }) {\r\n    const {\r\n        id, urls, altText\r\n    } = props;\r\n\r\n    const [index, setIndex] = useState(0);\r\n    const count = urls.length;\r\n    const previousIndex = getPreviousIndex(index, count);\r\n    const nextIndex = getNextIndex(index, count)\r\n    const dots = urls.map((x, i) => {\r\n        const icon = i === index ? \"circle\" : \"circle-empty\";\r\n        return <i key={`dot_${id}_${i}`}className={`icon-${icon}`} />\r\n    });\r\n    const imgStyle = urls[index]\r\n    ? {\r\n        backgroundImage: `url('${urls[index]}')`,\r\n    }\r\n    : {};\r\n\r\n    /* Preload adjacent images to prevent flicker on scroll */\r\n    const previousImage = <img src={urls[previousIndex]} style={{display: \"none\"}} />\r\n    const nextImage = <img src={urls[nextIndex]} style={{display: \"none\"}} />\r\n\r\n    return (\r\n        <div className=\"wrapper\" key={id}>\r\n            {previousImage}{nextImage}\r\n            <div className=\"img\" style={imgStyle} title={altText} />\r\n            <div className=\"dots\">\r\n                <span>{dots}</span>\r\n            </div>\r\n            {urls.length > 1 &&\r\n            <React.Fragment>\r\n                <button className=\"back-button\" onClick={() => { setIndex(previousIndex) }}>\r\n                    <i className=\"icon-left-open\" />\r\n                </button>\r\n                <button className=\"next-button\" onClick={() => { setIndex(nextIndex) }}>\r\n                    <i className=\"icon-right-open\" />\r\n                </button>\r\n            </React.Fragment>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SimpleCarousel;\r\n\r\nfunction getPreviousIndex(current: number, count: number) {\r\n    return current === 0 ? count-1 : current-1;\r\n}\r\nfunction getNextIndex(current: number, count: number) {\r\n    return current === count-1 ? 0 : current+1;\r\n}","const _archivedDataLocalStorageKey = 'DPS_archivedListings';\r\nexport const getArchivedDataFromLocalStorage = (): {} => {\r\n    return JSON.parse(localStorage.getItem(_archivedDataLocalStorageKey) ?? '{}');\r\n}\r\n\r\nexport const isArchivedInStorage = (key: string) => {\r\n    const storageData = getArchivedDataFromLocalStorage();\r\n    return storageData && storageData[key];\r\n}\r\n\r\nexport function saveInLocalStorage(key: string, archive: boolean): void {\r\n    const storedData = getArchivedDataFromLocalStorage();\r\n\r\n    if (archive) {\r\n        storedData[key] = true;\r\n    } else {\r\n        delete storedData[key];\r\n    }\r\n\r\n    localStorage.setItem(_archivedDataLocalStorageKey, JSON.stringify(storedData));\r\n}\r\n\r\nconst _searchParamsLocalStorageKey = 'DPS_searchParams';\r\nexport function loadSearchParamsFromLocalStorage(): {\r\n    minBeds?: number;\r\n    minBaths?: number;\r\n    minCarSpaces?: number;\r\n    maxPrice?: number;\r\n    maxDistFromTrain?: number;\r\n    suburbCsv?: string\r\n} {\r\n    return JSON.parse(localStorage.getItem(_searchParamsLocalStorageKey) ?? '{}');\r\n}\r\nexport function saveSearchParamsToLocalStorage(\r\n    minBeds: number,\r\n    minBaths: number,\r\n    minCarSpaces: number,\r\n    maxPrice: number,\r\n    maxDistFromTrain: number,\r\n    suburbCsv: string): void {\r\n    window.localStorage.setItem(_searchParamsLocalStorageKey, JSON.stringify({\r\n        'minBeds': minBeds,\r\n        'minBaths': minBaths,\r\n        'minCarSpaces': minCarSpaces,\r\n        'maxPrice': maxPrice,\r\n        'maxDistFromTrain': maxDistFromTrain,\r\n        'suburbCsv': suburbCsv,\r\n    }));\r\n};","export const getShortDay = (dateTime: string): string => {\r\n    const date = new Date(dateTime);\r\n    const options = { weekday: \"short\" } as Intl.DateTimeFormatOptions;\r\n    return new Intl.DateTimeFormat('en-US', options).format(date);\r\n}\r\n\r\nexport const getTwelveHourTime = (dateTime: string): string => {\r\n    const date = new Date(dateTime);\r\n    return date.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true });\r\n}\r\n\r\nexport const getDateRange = (startDateTime: string, endDateTime: string): string => {\r\n    const startDateTimeString = getShortDateAndTime(startDateTime);\r\n    const endTime = getTwelveHourTime(endDateTime);\r\n\r\n    return `${startDateTimeString} - ${endTime}`;\r\n\r\n    // Thu 12 Mar 11:15 AM -11:45 AM\r\n}\r\n\r\nexport const getShortDateAndTime = (dateTime: string) => {\r\n    const startTime = getTwelveHourTime(dateTime);\r\n\r\n    return `${getRelativeShortDate(dateTime, false)} ${startTime}`;\r\n}\r\n\r\nexport const getShortDate = (dateTime: string) => {\r\n    const startDate = new Date(dateTime);\r\n\r\n    const day = getShortDay(dateTime);\r\n    const date = startDate.getDate();\r\n    const month = getShortMonth(startDate.getMonth()+1);\r\n\r\n    return `${day} ${date} ${month}`;\r\n}\r\n\r\nexport const getRelativeShortDate = (dateTime: string, lowercase: boolean) => {\r\n    const date = new Date(dateTime);\r\n    const today = new Date();\r\n\r\n    const tomorrow = new Date(today);\r\n    tomorrow.setDate(tomorrow.getDate() + 1);\r\n    tomorrow.setHours(0, 0, 0, 0);\r\n\r\n    if (date < tomorrow) return lowercase ? 'today' : 'Today';\r\n\r\n    const dayAfterTomorrow = new Date(tomorrow);\r\n    dayAfterTomorrow.setDate(dayAfterTomorrow.getDate() + 1);\r\n    dayAfterTomorrow.setHours(0, 0, 0, 0);\r\n\r\n    if (date < dayAfterTomorrow) return lowercase ? 'tomorrow' :  'Tomorrow';\r\n\r\n    return getShortDate(dateTime);\r\n}\r\n\r\nconst getShortMonth = (monthIndex: number) => {\r\n    switch(monthIndex) {\r\n        case 1:  return 'Jan';\r\n        case 2:  return 'Feb';\r\n        case 3:  return 'Mar';\r\n        case 4:  return 'Apr';\r\n        case 5:  return 'May';\r\n        case 6:  return 'Jun';\r\n        case 7:  return 'Jul';\r\n        case 8:  return 'Aug';\r\n        case 9:  return 'Sep';\r\n        case 10: return 'Oct';\r\n        case 11: return 'Nov';\r\n        case 12: return 'Dec';\r\n    }\r\n}","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { AuctionSchedule, InspectionSchedule } from '../../types/domain';\r\nimport { getDateRange, getShortDateAndTime, getShortDay } from '../../utils/dateTimeHelper';\r\nimport './inspectionTimes.scss';\r\n\r\nfunction InspectionTimes(props: {\r\n    id: string,\r\n    inspectionSchedule?: InspectionSchedule,\r\n    auctionSchedule?: AuctionSchedule\r\n}) {\r\n    const { id, inspectionSchedule, auctionSchedule } = props;\r\n    const [inspectionTimesOpen, setInspectionTimesOpen] = useState(false);\r\n\r\n    const times = inspectionSchedule\r\n        && inspectionSchedule.times\r\n        && inspectionSchedule.times.length > 0\r\n        ? inspectionSchedule.times.filter(x => new Date(x.openingTime) > new Date())\r\n        : [];\r\n\r\n    const isAuctionTimeInFuture = auctionSchedule\r\n        && auctionSchedule.time\r\n        && new Date(auctionSchedule.time) > new Date();\r\n\r\n    return times.length > 0 || isAuctionTimeInFuture\r\n    ? (\r\n        <React.Fragment key={id}>\r\n            <span className=\"toggle ml-1\" onClick={() => setInspectionTimesOpen(!inspectionTimesOpen)}><i className={`icon-${inspectionTimesOpen ? \"up\" : \"down\"}-open`} /></span>\r\n\r\n            {inspectionTimesOpen &&\r\n                <span className=\"d-block mt-1 ml-1\">\r\n                    <ul className=\"inspection-times pl-3 mb-2\">\r\n                        {times.map(x =>\r\n                            <li key={`${id}-inspection-${x.openingTime}`} className=\"ml-0 mb-1\">{getDateRange(x.openingTime, x.closingTime)}</li>\r\n                        )}\r\n                        {auctionSchedule && auctionSchedule.time &&\r\n                        <li key={`${id}-auction-${auctionSchedule.time}`} className=\"text-danger ml-0 mb-1\"><i className=\"icon-hammer\" /> {getShortDateAndTime(auctionSchedule.time)}</li>\r\n                        }\r\n                    </ul>\r\n                </span>\r\n            }\r\n        </React.Fragment>\r\n    ) : <></>;\r\n}\r\n\r\nexport default InspectionTimes;","import React, { useState } from 'react';\r\nimport AgencyDetails from '../agencyDetails';\r\nimport NewTabLink from '../newTabLink';\r\nimport SimpleCarousel from '../simpleCarousel';\r\nimport './searchResult.scss';\r\nimport { isArchivedInStorage, saveInLocalStorage, getArchivedDataFromLocalStorage } from '../../utils/localStorageHelper';\r\nimport { getRelativeShortDate, getShortDate, getShortDateAndTime, getShortDay, getTwelveHourTime } from '../../utils/dateTimeHelper';\r\nimport InspectionTimes from '../inspectionTimes';\r\nimport DomainListingWrapper from '../../types/domain';\r\n\r\nfunction SearchResult(props: {closestStops: any, data: DomainListingWrapper, showArchived: boolean}) {\r\n    const {\r\n        closestStops, data, showArchived //, isArchivedInStorage\r\n    } = props;\r\n\r\n    const [isArchived, setIsArchived] = useState(isArchivedInStorage(data.listing.listingSlug));\r\n    const href = `https://domain.com.au/${data.listing.listingSlug}`;\r\n    const streetAddress = data.listing.propertyDetails.unitNumber\r\n        ? `${data.listing.propertyDetails.unitNumber}/${data.listing.propertyDetails.streetNumber} ${data.listing.propertyDetails.street}`\r\n        : `${data.listing.propertyDetails.streetNumber} ${data.listing.propertyDetails.street}`;\r\n    const imageAltText = `Image for ${streetAddress}`;\r\n\r\n    const agent = data.listing.advertiser;\r\n\r\n    //Select at most the first two closest stops, then add markup for rendering\r\n    const closestStopsMarkup = closestStops\r\n        .filter((stop, i) => { return i < 2 })\r\n        .map(y => {\r\n            const key = `${data.listing.listingSlug}_${y.stop_name.replace(' ', '')}`;\r\n            return <span className=\"col-12\" key={key}>\r\n                <i className=\"icon-train\" />\r\n                {y.stop_name.replace(' Station', '')}: {Math.round(y.distance * 10) / 10}km\r\n                <a target=\"_blank\" className=\"ml-1 dark-link\" href={`https://www.google.com/maps/dir/${data.listing.propertyDetails.latitude},${data.listing.propertyDetails.longitude}/${y.latitude},${y.longitude}/data=!3m1!4b1!4m2!4m1!3e2`}>\r\n                    <i className=\"icon-direction\" />\r\n                </a>\r\n            </span>\r\n        });\r\n    const imageUrls = (data.listing.media ?? [])\r\n        .filter(x => x.category === \"Image\")\r\n        .map(y => `${y.url}/500x500`);\r\n\r\n    const parsePropertyType = (propertyType: string, unitNumber: string, description: string) => {\r\n        switch (propertyType.toLowerCase()) {\r\n            case \"NewApartments\".toLowerCase():\r\n                return \"New Apartment\"\r\n            case \"ApartmentUnitFlat\".toLowerCase():\r\n                // Check the description first, to see if apartment or unit are mentioned\r\n                if (description.toLowerCase().indexOf(\"apartment\") >= 0) {\r\n                    return \"Apartment\";\r\n                }\r\n                if (description.toLowerCase().indexOf(\"unit\") >= 0) {\r\n                    return \"Unit\";\r\n                }\r\n\r\n                // If it's only numeric, use the value to guess if it's an apartment\r\n                if (new RegExp(/^\\d+$/).test(unitNumber)) {\r\n                    const numericUnitNumber = parseInt(unitNumber);\r\n\r\n                    // If it's > 99, it's almost definitely an apartment\r\n                    if (numericUnitNumber > 99) {\r\n                        return \"Apartment\";\r\n                    }\r\n\r\n                    // If it's < 20, it's possibly a unit\r\n                    if (numericUnitNumber < 30) {\r\n                        return \"Unit\";\r\n                    }\r\n                } else {\r\n                    // If it contains a G, it's likely a ground floor apartment\r\n                    if (unitNumber.toLowerCase().indexOf(\"g\") >= 0) {\r\n                        return \"Apartment\";\r\n                    }\r\n\r\n                    // If it contains an A or B, it's potentially a subdivision so likely a unit\r\n                    if (new RegExp(/[ABab]/).test(unitNumber)) {\r\n                        return \"Unit\";\r\n                    }\r\n                }\r\n\r\n                // If nothing matched, return a combined value\r\n                return \"Apartment / Unit\";\r\n            case \"House\".toLowerCase():\r\n            case \"Townhouse\".toLowerCase():\r\n            default:\r\n                return propertyType;\r\n        }\r\n    }\r\n\r\n    const propertyType = parsePropertyType(\r\n        data.listing.propertyDetails.propertyType,\r\n        data.listing.propertyDetails.unitNumber,\r\n        data.listing.summaryDescription\r\n    );\r\n\r\n    const isAuctionTimeInFuture = data?.listing?.auctionSchedule\r\n        && data.listing.auctionSchedule.time\r\n        && new Date(data.listing.auctionSchedule.time) > new Date()\r\n        ? true : false;\r\n\r\n    const openTimes = (data?.listing?.inspectionSchedule?.times ?? []).filter(x => new Date(x.openingTime) > new Date());\r\n\r\n    const openTime = openTimes[0]\r\n        ? getRelativeShortDate(openTimes[0].openingTime, true)\r\n        : undefined;\r\n\r\n    const auctionDate = data?.listing?.auctionSchedule?.time\r\n        ? getRelativeShortDate(data.listing.auctionSchedule.time, false)\r\n        : undefined;\r\n\r\n    return !isArchived || (isArchived && showArchived)\r\n    ? (\r\n        <React.Fragment key={data.listing.listingSlug}>\r\n            <div className=\"my-2 mx-3 search-result-wrapper\">\r\n                <div className={`search-result h-100 ${isArchived ? 'archived' : ''}`}>\r\n                    <div className=\"border border-secondary h-100 shadow d-flex flex-column \">\r\n                        <div className=\"px-0 text-center overflow-hidden carousel\">\r\n                            <SimpleCarousel\r\n                                id={data.listing.listingSlug}\r\n                                urls={imageUrls}\r\n                                altText={imageAltText}\r\n                            />\r\n                        </div>\r\n                        <AgencyDetails\r\n                            id={`agency_${data.listing.listingSlug}`}\r\n                            name={agent.name}\r\n                            logoUrl={agent.logoUrl}\r\n                            preferredColourHex={agent.preferredColourHex}\r\n                            contacts={agent.contacts}\r\n                            key={`agent_${data.listing.listingSlug}`} />\r\n                        <div className=\"px-3 pt-1 pb-2 mb-auto\">\r\n                            <span className=\"d-block font-weight-bold text-truncate\">{data.listing.priceDetails.displayPrice}</span>\r\n                            <span className=\"d-block\">{streetAddress}</span>\r\n                            <span className=\"d-block\">\r\n                                {data.listing.propertyDetails.suburb} {data.listing.propertyDetails.state} {data.listing.propertyDetails.postcode}\r\n                                <a target=\"_blank\" className=\"ml-1 dark-link\" href={`https://www.google.com/maps/search/?api=1&query=${data.listing.propertyDetails.latitude},${data.listing.propertyDetails.longitude}`}>\r\n                                    <i className=\"icon-map-o\" />\r\n                                </a>\r\n                            </span>\r\n                            <span className=\"d-block my-1\">\r\n                                <span className=\"badge badge-pill badge-secondary\">\r\n                                    {propertyType}\r\n                                </span>\r\n                                {openTime &&\r\n                                    <span className=\"badge badge-pill badge-success ml-2\">\r\n                                        Open {openTime}\r\n                                    </span>\r\n                                }\r\n                                {!openTime && isAuctionTimeInFuture && auctionDate &&\r\n                                     <span className=\"badge badge-pill badge-danger ml-2\">\r\n                                        Auction {auctionDate}\r\n                                    </span>\r\n                                }\r\n                                {(openTime || isAuctionTimeInFuture) &&\r\n                                    <InspectionTimes\r\n                                        id={`inspections_${data.listing.listingSlug}`}\r\n                                        inspectionSchedule={data.listing.inspectionSchedule}\r\n                                        auctionSchedule={data.listing.auctionSchedule}\r\n                                    />\r\n                                }\r\n                            </span>\r\n                            <span className=\"d-block\">\r\n                                <span className=\"icon-wrapper\"><i className=\"icon-bed\" />{data.listing.propertyDetails.bedrooms}</span>\r\n                                <span className=\"icon-wrapper\"><i className=\"icon-bath\" />{data.listing.propertyDetails.bathrooms}</span>\r\n                                <span className=\"icon-wrapper\"><i className=\"icon-cab\" />{data.listing.propertyDetails.carspaces}</span>\r\n                                {auctionDate &&\r\n                                    <span className=\"icon-wrapper text-danger\"><i className=\"icon-hammer mr-1\" />{auctionDate}</span>\r\n                                }\r\n                            </span>\r\n                            <span className=\"row mt-1\">{closestStopsMarkup}</span>\r\n                        </div>\r\n                        <div className=\"row text-center mb-2\">\r\n                            <span className=\"col-6\"><NewTabLink href={href} label=\"View\" className=\"text-success\" /></span>\r\n                            <span className=\"col-6\"><a href=\"javascript:(0);\" className={!isArchived ? \"text-danger\" : \"\"} onClick={() => {\r\n                                setIsArchived(!isArchived)\r\n                                saveInLocalStorage(data.listing.listingSlug, !isArchived);\r\n                            }}>{isArchived ? 'Show' : 'Hide'}</a></span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n    : <React.Fragment />;\r\n}\r\n\r\nexport default SearchResult;","const stops = [{\r\n  \"stop_suburb\": \"Pakenham\",\r\n  \"stop_name\": \"Pakenham Station\",\r\n  \"stop_latitude\": -38.0806122,\r\n  \"stop_longitude\": 145.486374\r\n}, {\r\n  \"stop_suburb\": \"Pakenham\",\r\n  \"stop_name\": \"Cardinia Road Station\",\r\n  \"stop_latitude\": -38.07129,\r\n  \"stop_longitude\": 145.43779\r\n}, {\r\n  \"stop_suburb\": \"Officer\",\r\n  \"stop_name\": \"Officer Station\",\r\n  \"stop_latitude\": -38.066143,\r\n  \"stop_longitude\": 145.411\r\n}, {\r\n  \"stop_suburb\": \"Beaconsfield\",\r\n  \"stop_name\": \"Beaconsfield Station\",\r\n  \"stop_latitude\": -38.050827,\r\n  \"stop_longitude\": 145.366074\r\n}, {\r\n  \"stop_suburb\": \"Belgrave\",\r\n  \"stop_name\": \"Belgrave Station\",\r\n  \"stop_latitude\": -37.9091,\r\n  \"stop_longitude\": 145.355286\r\n}, {\r\n  \"stop_suburb\": \"Lilydale\",\r\n  \"stop_name\": \"Lilydale Station\",\r\n  \"stop_latitude\": -37.7555161,\r\n  \"stop_longitude\": 145.347717\r\n}, {\r\n  \"stop_suburb\": \"Berwick\",\r\n  \"stop_name\": \"Berwick Station\",\r\n  \"stop_latitude\": -38.04041,\r\n  \"stop_longitude\": 145.345718\r\n}, {\r\n  \"stop_suburb\": \"Tecoma\",\r\n  \"stop_name\": \"Tecoma Station\",\r\n  \"stop_latitude\": -37.9081154,\r\n  \"stop_longitude\": 145.343\r\n}, {\r\n  \"stop_suburb\": \"Upwey\",\r\n  \"stop_name\": \"Upwey Station\",\r\n  \"stop_latitude\": -37.90369,\r\n  \"stop_longitude\": 145.331329\r\n}, {\r\n  \"stop_suburb\": \"Mooroolbark\",\r\n  \"stop_name\": \"Mooroolbark Station\",\r\n  \"stop_latitude\": -37.7847481,\r\n  \"stop_longitude\": 145.312408\r\n}, {\r\n  \"stop_suburb\": \"Upper Ferntree Gully\",\r\n  \"stop_name\": \"Upper Ferntree Gully Station\",\r\n  \"stop_latitude\": -37.8926735,\r\n  \"stop_longitude\": 145.307526\r\n}, {\r\n  \"stop_suburb\": \"Narre Warren\",\r\n  \"stop_name\": \"Narre Warren Station\",\r\n  \"stop_latitude\": -38.02781,\r\n  \"stop_longitude\": 145.30397\r\n}, {\r\n  \"stop_suburb\": \"Ferntree Gully\",\r\n  \"stop_name\": \"Ferntree Gully Station\",\r\n  \"stop_latitude\": -37.8817,\r\n  \"stop_longitude\": 145.295258\r\n}, {\r\n  \"stop_suburb\": \"Boronia\",\r\n  \"stop_name\": \"Boronia Station\",\r\n  \"stop_latitude\": -37.8604546,\r\n  \"stop_longitude\": 145.284378\r\n}, {\r\n  \"stop_suburb\": \"Cranbourne\",\r\n  \"stop_name\": \"Cranbourne Station\",\r\n  \"stop_latitude\": -38.09954,\r\n  \"stop_longitude\": 145.2806\r\n}, {\r\n  \"stop_suburb\": \"Croydon\",\r\n  \"stop_name\": \"Croydon Station\",\r\n  \"stop_latitude\": -37.79544,\r\n  \"stop_longitude\": 145.2806\r\n}, {\r\n  \"stop_suburb\": \"Hallam\",\r\n  \"stop_name\": \"Hallam Station\",\r\n  \"stop_latitude\": -38.0177422,\r\n  \"stop_longitude\": 145.269775\r\n}, {\r\n  \"stop_suburb\": \"Bayswater\",\r\n  \"stop_name\": \"Bayswater Station\",\r\n  \"stop_latitude\": -37.84173,\r\n  \"stop_longitude\": 145.268143\r\n}, {\r\n  \"stop_suburb\": \"Cranbourne North\",\r\n  \"stop_name\": \"Merinda Park Station\",\r\n  \"stop_latitude\": -38.0790024,\r\n  \"stop_longitude\": 145.2635\r\n}, {\r\n  \"stop_suburb\": \"Ringwood East\",\r\n  \"stop_name\": \"Ringwood East Station\",\r\n  \"stop_latitude\": -37.81197,\r\n  \"stop_longitude\": 145.2502\r\n}, {\r\n  \"stop_suburb\": \"Lynbrook\",\r\n  \"stop_name\": \"Lynbrook Station\",\r\n  \"stop_latitude\": -38.0573463,\r\n  \"stop_longitude\": 145.249283\r\n}, {\r\n  \"stop_suburb\": \"Heathmont\",\r\n  \"stop_name\": \"Heathmont Station\",\r\n  \"stop_latitude\": -37.82832,\r\n  \"stop_longitude\": 145.244553\r\n}, {\r\n  \"stop_suburb\": \"Ringwood\",\r\n  \"stop_name\": \"Ringwood Station\",\r\n  \"stop_latitude\": -37.8156624,\r\n  \"stop_longitude\": 145.229477\r\n}, {\r\n  \"stop_suburb\": \"Crib Point\",\r\n  \"stop_name\": \"Stony Point Station\",\r\n  \"stop_latitude\": -38.3742371,\r\n  \"stop_longitude\": 145.221848\r\n}, {\r\n  \"stop_suburb\": \"Ringwood\",\r\n  \"stop_name\": \"Heatherdale Station\",\r\n  \"stop_latitude\": -37.81884,\r\n  \"stop_longitude\": 145.213547\r\n}, {\r\n  \"stop_suburb\": \"Dandenong\",\r\n  \"stop_name\": \"Dandenong Station\",\r\n  \"stop_latitude\": -37.9899673,\r\n  \"stop_longitude\": 145.209732\r\n}, {\r\n  \"stop_suburb\": \"Crib Point\",\r\n  \"stop_name\": \"Crib Point Station\",\r\n  \"stop_latitude\": -38.36612,\r\n  \"stop_longitude\": 145.204041\r\n}, {\r\n  \"stop_suburb\": \"Mitcham\",\r\n  \"stop_name\": \"Mitcham Station\",\r\n  \"stop_latitude\": -37.8180847,\r\n  \"stop_longitude\": 145.192886\r\n}, {\r\n  \"stop_suburb\": \"Hurstbridge\",\r\n  \"stop_name\": \"Hurstbridge Station\",\r\n  \"stop_latitude\": -37.6394,\r\n  \"stop_longitude\": 145.192017\r\n}, {\r\n  \"stop_suburb\": \"Noble Park\",\r\n  \"stop_name\": \"Yarraman Station\",\r\n  \"stop_latitude\": -37.9782524,\r\n  \"stop_longitude\": 145.1916\r\n}, {\r\n  \"stop_suburb\": \"Crib Point\",\r\n  \"stop_name\": \"Morradoo Station\",\r\n  \"stop_latitude\": -38.3540344,\r\n  \"stop_longitude\": 145.1896\r\n}, {\r\n  \"stop_suburb\": \"Tyabb\",\r\n  \"stop_name\": \"Tyabb Station\",\r\n  \"stop_latitude\": -38.2598152,\r\n  \"stop_longitude\": 145.1864\r\n}, {\r\n  \"stop_suburb\": \"Hastings\",\r\n  \"stop_name\": \"Hastings Station\",\r\n  \"stop_latitude\": -38.30566,\r\n  \"stop_longitude\": 145.185974\r\n}, {\r\n  \"stop_suburb\": \"Wattle Glen\",\r\n  \"stop_name\": \"Wattle Glen Station\",\r\n  \"stop_latitude\": -37.6639671,\r\n  \"stop_longitude\": 145.181625\r\n}, {\r\n  \"stop_suburb\": \"Bittern\",\r\n  \"stop_name\": \"Bittern Station\",\r\n  \"stop_latitude\": -38.33739,\r\n  \"stop_longitude\": 145.178024\r\n}, {\r\n  \"stop_suburb\": \"Noble Park\",\r\n  \"stop_name\": \"Noble Park Station\",\r\n  \"stop_latitude\": -37.9666252,\r\n  \"stop_longitude\": 145.176331\r\n}, {\r\n  \"stop_suburb\": \"Somerville\",\r\n  \"stop_name\": \"Somerville Station\",\r\n  \"stop_latitude\": -38.22534,\r\n  \"stop_longitude\": 145.176239\r\n}, {\r\n  \"stop_suburb\": \"Nunawading\",\r\n  \"stop_name\": \"Nunawading Station\",\r\n  \"stop_latitude\": -37.8204231,\r\n  \"stop_longitude\": 145.175232\r\n}, {\r\n  \"stop_suburb\": \"Springvale\",\r\n  \"stop_name\": \"Sandown Park Station\",\r\n  \"stop_latitude\": -37.9565,\r\n  \"stop_longitude\": 145.162827\r\n}, {\r\n  \"stop_suburb\": \"Glen Waverley\",\r\n  \"stop_name\": \"Glen Waverley Station\",\r\n  \"stop_latitude\": -37.8795,\r\n  \"stop_longitude\": 145.162064\r\n}, {\r\n  \"stop_suburb\": \"Baxter\",\r\n  \"stop_name\": \"Baxter Station\",\r\n  \"stop_latitude\": -38.194046,\r\n  \"stop_longitude\": 145.160522\r\n}, {\r\n  \"stop_suburb\": \"Diamond Creek\",\r\n  \"stop_name\": \"Diamond Creek Station\",\r\n  \"stop_latitude\": -37.6732941,\r\n  \"stop_longitude\": 145.158508\r\n}, {\r\n  \"stop_suburb\": \"Springvale\",\r\n  \"stop_name\": \"Springvale Station\",\r\n  \"stop_latitude\": -37.9495125,\r\n  \"stop_longitude\": 145.153458\r\n}, {\r\n  \"stop_suburb\": \"Blackburn\",\r\n  \"stop_name\": \"Blackburn Station\",\r\n  \"stop_latitude\": -37.82007,\r\n  \"stop_longitude\": 145.150009\r\n}, {\r\n  \"stop_suburb\": \"Glen Waverley\",\r\n  \"stop_name\": \"Syndal Station\",\r\n  \"stop_latitude\": -37.87623,\r\n  \"stop_longitude\": 145.14978\r\n}, {\r\n  \"stop_suburb\": \"Eltham\",\r\n  \"stop_name\": \"Eltham Station\",\r\n  \"stop_latitude\": -37.71355,\r\n  \"stop_longitude\": 145.147827\r\n}, {\r\n  \"stop_suburb\": \"Blackburn\",\r\n  \"stop_name\": \"Laburnum Station\",\r\n  \"stop_latitude\": -37.8207779,\r\n  \"stop_longitude\": 145.1407\r\n}, {\r\n  \"stop_suburb\": \"Frankston\",\r\n  \"stop_name\": \"Leawarra Station\",\r\n  \"stop_latitude\": -38.1520348,\r\n  \"stop_longitude\": 145.139542\r\n}, {\r\n  \"stop_suburb\": \"Clayton South\",\r\n  \"stop_name\": \"Westall Station\",\r\n  \"stop_latitude\": -37.93849,\r\n  \"stop_longitude\": 145.13884\r\n}, {\r\n  \"stop_suburb\": \"Seaford\",\r\n  \"stop_name\": \"Kananook Station\",\r\n  \"stop_latitude\": -38.12174,\r\n  \"stop_longitude\": 145.135284\r\n}, {\r\n  \"stop_suburb\": \"Seaford\",\r\n  \"stop_name\": \"Seaford Station\",\r\n  \"stop_latitude\": -38.1040154,\r\n  \"stop_longitude\": 145.128235\r\n}, {\r\n  \"stop_suburb\": \"Mount Waverley\",\r\n  \"stop_name\": \"Mount Waverley Station\",\r\n  \"stop_latitude\": -37.87525,\r\n  \"stop_longitude\": 145.128052\r\n}, {\r\n  \"stop_suburb\": \"Frankston\",\r\n  \"stop_name\": \"Frankston Station\",\r\n  \"stop_latitude\": -38.1429863,\r\n  \"stop_longitude\": 145.12616\r\n}, {\r\n  \"stop_suburb\": \"Carrum\",\r\n  \"stop_name\": \"Carrum Station\",\r\n  \"stop_latitude\": -38.0748978,\r\n  \"stop_longitude\": 145.122421\r\n}, {\r\n  \"stop_suburb\": \"Montmorency\",\r\n  \"stop_name\": \"Montmorency Station\",\r\n  \"stop_latitude\": -37.7152977,\r\n  \"stop_longitude\": 145.1215\r\n}, {\r\n  \"stop_suburb\": \"Box Hill\",\r\n  \"stop_name\": \"Box Hill Station\",\r\n  \"stop_latitude\": -37.8192177,\r\n  \"stop_longitude\": 145.121429\r\n}, {\r\n  \"stop_suburb\": \"Clayton\",\r\n  \"stop_name\": \"Clayton Station\",\r\n  \"stop_latitude\": -37.9251671,\r\n  \"stop_longitude\": 145.120682\r\n}, {\r\n  \"stop_suburb\": \"Bonbeach\",\r\n  \"stop_name\": \"Bonbeach Station\",\r\n  \"stop_latitude\": -38.0629463,\r\n  \"stop_longitude\": 145.119675\r\n}, {\r\n  \"stop_suburb\": \"Chelsea\",\r\n  \"stop_name\": \"Chelsea Station\",\r\n  \"stop_latitude\": -38.05196,\r\n  \"stop_longitude\": 145.116043\r\n}, {\r\n  \"stop_suburb\": \"Mount Waverley\",\r\n  \"stop_name\": \"Jordanville Station\",\r\n  \"stop_latitude\": -37.8736,\r\n  \"stop_longitude\": 145.112091\r\n}, {\r\n  \"stop_suburb\": \"Edithvale\",\r\n  \"stop_name\": \"Edithvale Station\",\r\n  \"stop_latitude\": -38.0380554,\r\n  \"stop_longitude\": 145.108536\r\n}, {\r\n  \"stop_suburb\": \"Greensborough\",\r\n  \"stop_name\": \"Greensborough Station\",\r\n  \"stop_latitude\": -37.70395,\r\n  \"stop_longitude\": 145.108246\r\n}, {\r\n  \"stop_suburb\": \"Mont Albert\",\r\n  \"stop_name\": \"Mont Albert Station\",\r\n  \"stop_latitude\": -37.8194275,\r\n  \"stop_longitude\": 145.10553\r\n}, {\r\n  \"stop_suburb\": \"Oakleigh\",\r\n  \"stop_name\": \"Huntingdale Station\",\r\n  \"stop_latitude\": -37.91102,\r\n  \"stop_longitude\": 145.102371\r\n}, {\r\n  \"stop_suburb\": \"Aspendale\",\r\n  \"stop_name\": \"Aspendale Station\",\r\n  \"stop_latitude\": -38.02722,\r\n  \"stop_longitude\": 145.102158\r\n}, {\r\n  \"stop_suburb\": \"Mernda\",\r\n  \"stop_name\": \"Mernda Station\",\r\n  \"stop_latitude\": -37.60255,\r\n  \"stop_longitude\": 145.100876\r\n}, {\r\n  \"stop_suburb\": \"Surrey Hills\",\r\n  \"stop_name\": \"Surrey Hills Station\",\r\n  \"stop_latitude\": -37.8241425,\r\n  \"stop_longitude\": 145.098785\r\n}, {\r\n  \"stop_suburb\": \"South Morang\",\r\n  \"stop_name\": \"Hawkstowe Station\",\r\n  \"stop_latitude\": -37.6229935,\r\n  \"stop_longitude\": 145.0974\r\n}, {\r\n  \"stop_suburb\": \"South Morang\",\r\n  \"stop_name\": \"Middle Gorge Station\",\r\n  \"stop_latitude\": -37.644062,\r\n  \"stop_longitude\": 145.092133\r\n}, {\r\n  \"stop_suburb\": \"Malvern East\",\r\n  \"stop_name\": \"Holmesglen Station\",\r\n  \"stop_latitude\": -37.8744,\r\n  \"stop_longitude\": 145.090652\r\n}, {\r\n  \"stop_suburb\": \"Surrey Hills\",\r\n  \"stop_name\": \"Chatham Station\",\r\n  \"stop_latitude\": -37.8243027,\r\n  \"stop_longitude\": 145.088654\r\n}, {\r\n  \"stop_suburb\": \"Oakleigh\",\r\n  \"stop_name\": \"Oakleigh Station\",\r\n  \"stop_latitude\": -37.9003677,\r\n  \"stop_longitude\": 145.088318\r\n}, {\r\n  \"stop_suburb\": \"Mordialloc\",\r\n  \"stop_name\": \"Mordialloc Station\",\r\n  \"stop_latitude\": -38.006588,\r\n  \"stop_longitude\": 145.087662\r\n}, {\r\n  \"stop_suburb\": \"Watsonia\",\r\n  \"stop_name\": \"Watsonia Station\",\r\n  \"stop_latitude\": -37.7109528,\r\n  \"stop_longitude\": 145.0838\r\n}, {\r\n  \"stop_suburb\": \"Ashburton\",\r\n  \"stop_name\": \"Ashburton Station\",\r\n  \"stop_latitude\": -37.86197,\r\n  \"stop_longitude\": 145.081345\r\n}, {\r\n  \"stop_suburb\": \"Canterbury\",\r\n  \"stop_name\": \"Canterbury Station\",\r\n  \"stop_latitude\": -37.82449,\r\n  \"stop_longitude\": 145.081223\r\n}, {\r\n  \"stop_suburb\": \"Glen Iris\",\r\n  \"stop_name\": \"Burwood Station\",\r\n  \"stop_latitude\": -37.8515625,\r\n  \"stop_longitude\": 145.0805\r\n}, {\r\n  \"stop_suburb\": \"Ashburton\",\r\n  \"stop_name\": \"Alamein Station\",\r\n  \"stop_latitude\": -37.8683167,\r\n  \"stop_longitude\": 145.079666\r\n}, {\r\n  \"stop_suburb\": \"Hughesdale\",\r\n  \"stop_name\": \"Hughesdale Station\",\r\n  \"stop_latitude\": -37.89488,\r\n  \"stop_longitude\": 145.077637\r\n}, {\r\n  \"stop_suburb\": \"Parkdale\",\r\n  \"stop_name\": \"Parkdale Station\",\r\n  \"stop_latitude\": -37.9930763,\r\n  \"stop_longitude\": 145.076324\r\n}, {\r\n  \"stop_suburb\": \"Camberwell\",\r\n  \"stop_name\": \"Hartwell Station\",\r\n  \"stop_latitude\": -37.8439827,\r\n  \"stop_longitude\": 145.075562\r\n}, {\r\n  \"stop_suburb\": \"Camberwell\",\r\n  \"stop_name\": \"Willison Station\",\r\n  \"stop_latitude\": -37.8357124,\r\n  \"stop_longitude\": 145.0703\r\n}, {\r\n  \"stop_suburb\": \"Camberwell\",\r\n  \"stop_name\": \"Riversdale Station\",\r\n  \"stop_latitude\": -37.8315,\r\n  \"stop_longitude\": 145.069641\r\n}, {\r\n  \"stop_suburb\": \"Malvern East\",\r\n  \"stop_name\": \"East Malvern Station\",\r\n  \"stop_latitude\": -37.87693,\r\n  \"stop_longitude\": 145.0694\r\n}, {\r\n  \"stop_suburb\": \"Macleod\",\r\n  \"stop_name\": \"Macleod Station\",\r\n  \"stop_latitude\": -37.72601,\r\n  \"stop_longitude\": 145.069153\r\n}, {\r\n  \"stop_suburb\": \"Camberwell\",\r\n  \"stop_name\": \"East Camberwell Station\",\r\n  \"stop_latitude\": -37.8258934,\r\n  \"stop_longitude\": 145.068192\r\n}, {\r\n  \"stop_suburb\": \"Murrumbeena\",\r\n  \"stop_name\": \"Murrumbeena Station\",\r\n  \"stop_latitude\": -37.8901978,\r\n  \"stop_longitude\": 145.067383\r\n}, {\r\n  \"stop_suburb\": \"South Morang\",\r\n  \"stop_name\": \"South Morang Station\",\r\n  \"stop_latitude\": -37.6491623,\r\n  \"stop_longitude\": 145.067032\r\n}, {\r\n  \"stop_suburb\": \"Rosanna\",\r\n  \"stop_name\": \"Rosanna Station\",\r\n  \"stop_latitude\": -37.7428741,\r\n  \"stop_longitude\": 145.066147\r\n}, {\r\n  \"stop_suburb\": \"Mentone\",\r\n  \"stop_name\": \"Mentone Station\",\r\n  \"stop_latitude\": -37.9818649,\r\n  \"stop_longitude\": 145.06517\r\n}, {\r\n  \"stop_suburb\": \"Malvern East\",\r\n  \"stop_name\": \"Darling Station\",\r\n  \"stop_latitude\": -37.8689575,\r\n  \"stop_longitude\": 145.062943\r\n}, {\r\n  \"stop_suburb\": \"Heidelberg\",\r\n  \"stop_name\": \"Heidelberg Station\",\r\n  \"stop_latitude\": -37.7570763,\r\n  \"stop_longitude\": 145.060684\r\n}, {\r\n  \"stop_suburb\": \"Camberwell\",\r\n  \"stop_name\": \"Camberwell Station\",\r\n  \"stop_latitude\": -37.8265648,\r\n  \"stop_longitude\": 145.058685\r\n}, {\r\n  \"stop_suburb\": \"Carnegie\",\r\n  \"stop_name\": \"Carnegie Station\",\r\n  \"stop_latitude\": -37.88624,\r\n  \"stop_longitude\": 145.058578\r\n}, {\r\n  \"stop_suburb\": \"Glen Iris\",\r\n  \"stop_name\": \"Glen Iris Station\",\r\n  \"stop_latitude\": -37.8593063,\r\n  \"stop_longitude\": 145.058228\r\n}, {\r\n  \"stop_suburb\": \"Cheltenham\",\r\n  \"stop_name\": \"Cheltenham Station\",\r\n  \"stop_latitude\": -37.9666519,\r\n  \"stop_longitude\": 145.05455\r\n}, {\r\n  \"stop_suburb\": \"Eaglemont\",\r\n  \"stop_name\": \"Eaglemont Station\",\r\n  \"stop_latitude\": -37.7635841,\r\n  \"stop_longitude\": 145.05394\r\n}, {\r\n  \"stop_suburb\": \"Glen Iris\",\r\n  \"stop_name\": \"Gardiner Station\",\r\n  \"stop_latitude\": -37.8532829,\r\n  \"stop_longitude\": 145.051666\r\n}, {\r\n  \"stop_suburb\": \"Cheltenham\",\r\n  \"stop_name\": \"Southland Station\",\r\n  \"stop_latitude\": -37.95876,\r\n  \"stop_longitude\": 145.049118\r\n}, {\r\n  \"stop_suburb\": \"Hawthorn East\",\r\n  \"stop_name\": \"Auburn Station\",\r\n  \"stop_latitude\": -37.8224,\r\n  \"stop_longitude\": 145.045837\r\n}, {\r\n  \"stop_suburb\": \"Ivanhoe\",\r\n  \"stop_name\": \"Ivanhoe Station\",\r\n  \"stop_latitude\": -37.768898,\r\n  \"stop_longitude\": 145.045425\r\n}, {\r\n  \"stop_suburb\": \"Caulfield East\",\r\n  \"stop_name\": \"Caulfield Station\",\r\n  \"stop_latitude\": -37.8774567,\r\n  \"stop_longitude\": 145.042526\r\n}, {\r\n  \"stop_suburb\": \"Glen Huntly\",\r\n  \"stop_name\": \"Glenhuntly Station\",\r\n  \"stop_latitude\": -37.8897171,\r\n  \"stop_longitude\": 145.042221\r\n}, {\r\n  \"stop_suburb\": \"Highett\",\r\n  \"stop_name\": \"Highett Station\",\r\n  \"stop_latitude\": -37.9484253,\r\n  \"stop_longitude\": 145.04187\r\n}, {\r\n  \"stop_suburb\": \"Malvern\",\r\n  \"stop_name\": \"Tooronga Station\",\r\n  \"stop_latitude\": -37.84937,\r\n  \"stop_longitude\": 145.041733\r\n}, {\r\n  \"stop_suburb\": \"Ormond\",\r\n  \"stop_name\": \"Ormond Station\",\r\n  \"stop_latitude\": -37.90321,\r\n  \"stop_longitude\": 145.039612\r\n}, {\r\n  \"stop_suburb\": \"Ivanhoe\",\r\n  \"stop_name\": \"Darebin Station\",\r\n  \"stop_latitude\": -37.7749634,\r\n  \"stop_longitude\": 145.038483\r\n}, {\r\n  \"stop_suburb\": \"Mckinnon\",\r\n  \"stop_name\": \"McKinnon Station\",\r\n  \"stop_latitude\": -37.910305,\r\n  \"stop_longitude\": 145.0383\r\n}, {\r\n  \"stop_suburb\": \"Bentleigh\",\r\n  \"stop_name\": \"Bentleigh Station\",\r\n  \"stop_latitude\": -37.9174271,\r\n  \"stop_longitude\": 145.036987\r\n}, {\r\n  \"stop_suburb\": \"Moorabbin\",\r\n  \"stop_name\": \"Moorabbin Station\",\r\n  \"stop_latitude\": -37.93435,\r\n  \"stop_longitude\": 145.036743\r\n}, {\r\n  \"stop_suburb\": \"Hawthorn\",\r\n  \"stop_name\": \"Glenferrie Station\",\r\n  \"stop_latitude\": -37.8214645,\r\n  \"stop_longitude\": 145.036438\r\n}, {\r\n  \"stop_suburb\": \"Bentleigh\",\r\n  \"stop_name\": \"Patterson Station\",\r\n  \"stop_latitude\": -37.9251442,\r\n  \"stop_longitude\": 145.035461\r\n}, {\r\n  \"stop_suburb\": \"Kooyong\",\r\n  \"stop_name\": \"Kooyong Station\",\r\n  \"stop_latitude\": -37.8399277,\r\n  \"stop_longitude\": 145.033554\r\n}, {\r\n  \"stop_suburb\": \"Alphington\",\r\n  \"stop_name\": \"Alphington Station\",\r\n  \"stop_latitude\": -37.7783966,\r\n  \"stop_longitude\": 145.03125\r\n}, {\r\n  \"stop_suburb\": \"Epping\",\r\n  \"stop_name\": \"Epping Station\",\r\n  \"stop_latitude\": -37.6521873,\r\n  \"stop_longitude\": 145.031067\r\n}, {\r\n  \"stop_suburb\": \"Malvern\",\r\n  \"stop_name\": \"Malvern Station\",\r\n  \"stop_latitude\": -37.86625,\r\n  \"stop_longitude\": 145.0293\r\n}, {\r\n  \"stop_suburb\": \"Hawthorn\",\r\n  \"stop_name\": \"Hawthorn Station\",\r\n  \"stop_latitude\": -37.8218231,\r\n  \"stop_longitude\": 145.0229\r\n}, {\r\n  \"stop_suburb\": \"Toorak\",\r\n  \"stop_name\": \"Heyington Station\",\r\n  \"stop_latitude\": -37.83467,\r\n  \"stop_longitude\": 145.022629\r\n}, {\r\n  \"stop_suburb\": \"Armadale\",\r\n  \"stop_name\": \"Armadale Station\",\r\n  \"stop_latitude\": -37.8564529,\r\n  \"stop_longitude\": 145.019333\r\n}, {\r\n  \"stop_suburb\": \"Lalor\",\r\n  \"stop_name\": \"Lalor Station\",\r\n  \"stop_latitude\": -37.66585,\r\n  \"stop_longitude\": 145.0172\r\n}, {\r\n  \"stop_suburb\": \"Fairfield\",\r\n  \"stop_name\": \"Fairfield Station\",\r\n  \"stop_latitude\": -37.7791748,\r\n  \"stop_longitude\": 145.0169\r\n}, {\r\n  \"stop_suburb\": \"Thomastown\",\r\n  \"stop_name\": \"Thomastown Station\",\r\n  \"stop_latitude\": -37.680336,\r\n  \"stop_longitude\": 145.014282\r\n}, {\r\n  \"stop_suburb\": \"Armadale\",\r\n  \"stop_name\": \"Toorak Station\",\r\n  \"stop_latitude\": -37.85077,\r\n  \"stop_longitude\": 145.0139\r\n}, {\r\n  \"stop_suburb\": \"Thomastown\",\r\n  \"stop_name\": \"Keon Park Station\",\r\n  \"stop_latitude\": -37.6948662,\r\n  \"stop_longitude\": 145.011887\r\n}, {\r\n  \"stop_suburb\": \"Reservoir\",\r\n  \"stop_name\": \"Ruthven Station\",\r\n  \"stop_latitude\": -37.7078972,\r\n  \"stop_longitude\": 145.009521\r\n}, {\r\n  \"stop_suburb\": \"Northcote\",\r\n  \"stop_name\": \"Dennis Station\",\r\n  \"stop_latitude\": -37.7791824,\r\n  \"stop_longitude\": 145.00824\r\n}, {\r\n  \"stop_suburb\": \"Burnley\",\r\n  \"stop_name\": \"Burnley Station\",\r\n  \"stop_latitude\": -37.8275566,\r\n  \"stop_longitude\": 145.007553\r\n}, {\r\n  \"stop_suburb\": \"Reservoir\",\r\n  \"stop_name\": \"Reservoir Station\",\r\n  \"stop_latitude\": -37.71689,\r\n  \"stop_longitude\": 145.006989\r\n}, {\r\n  \"stop_suburb\": \"Sandringham\",\r\n  \"stop_name\": \"Sandringham Station\",\r\n  \"stop_latitude\": -37.95033,\r\n  \"stop_longitude\": 145.004562\r\n}, {\r\n  \"stop_suburb\": \"Brighton\",\r\n  \"stop_name\": \"Gardenvale Station\",\r\n  \"stop_latitude\": -37.8966942,\r\n  \"stop_longitude\": 145.004166\r\n}, {\r\n  \"stop_suburb\": \"Reservoir\",\r\n  \"stop_name\": \"Regent Station\",\r\n  \"stop_latitude\": -37.7284,\r\n  \"stop_longitude\": 145.002777\r\n}, {\r\n  \"stop_suburb\": \"Brighton\",\r\n  \"stop_name\": \"North Brighton Station\",\r\n  \"stop_latitude\": -37.9048843,\r\n  \"stop_longitude\": 145.002609\r\n}, {\r\n  \"stop_suburb\": \"South Yarra\",\r\n  \"stop_name\": \"Hawksburn Station\",\r\n  \"stop_latitude\": -37.844593,\r\n  \"stop_longitude\": 145.002136\r\n}, {\r\n  \"stop_suburb\": \"Hampton\",\r\n  \"stop_name\": \"Hampton Station\",\r\n  \"stop_latitude\": -37.937973,\r\n  \"stop_longitude\": 145.001465\r\n}, {\r\n  \"stop_suburb\": \"Elsternwick\",\r\n  \"stop_name\": \"Elsternwick Station\",\r\n  \"stop_latitude\": -37.88475,\r\n  \"stop_longitude\": 145.0009\r\n}, {\r\n  \"stop_suburb\": \"Preston\",\r\n  \"stop_name\": \"Preston Station\",\r\n  \"stop_latitude\": -37.7386742,\r\n  \"stop_longitude\": 145.000534\r\n}, {\r\n  \"stop_suburb\": \"Preston\",\r\n  \"stop_name\": \"Bell Station\",\r\n  \"stop_latitude\": -37.7455673,\r\n  \"stop_longitude\": 145.000153\r\n}, {\r\n  \"stop_suburb\": \"Northcote\",\r\n  \"stop_name\": \"Westgarth Station\",\r\n  \"stop_latitude\": -37.7806168,\r\n  \"stop_longitude\": 144.999237\r\n}, {\r\n  \"stop_suburb\": \"Thornbury\",\r\n  \"stop_name\": \"Thornbury Station\",\r\n  \"stop_latitude\": -37.7550468,\r\n  \"stop_longitude\": 144.998581\r\n}, {\r\n  \"stop_suburb\": \"Richmond\",\r\n  \"stop_name\": \"East Richmond Station\",\r\n  \"stop_latitude\": -37.8264046,\r\n  \"stop_longitude\": 144.99707\r\n}, {\r\n  \"stop_suburb\": \"Northcote\",\r\n  \"stop_name\": \"Croxton Station\",\r\n  \"stop_latitude\": -37.7641,\r\n  \"stop_longitude\": 144.997055\r\n}, {\r\n  \"stop_suburb\": \"Brighton\",\r\n  \"stop_name\": \"Middle Brighton Station\",\r\n  \"stop_latitude\": -37.9151344,\r\n  \"stop_longitude\": 144.996292\r\n}, {\r\n  \"stop_suburb\": \"Clifton Hill\",\r\n  \"stop_name\": \"Clifton Hill Station\",\r\n  \"stop_latitude\": -37.7886543,\r\n  \"stop_longitude\": 144.995422\r\n}, {\r\n  \"stop_suburb\": \"Northcote\",\r\n  \"stop_name\": \"Northcote Station\",\r\n  \"stop_latitude\": -37.7698631,\r\n  \"stop_longitude\": 144.995285\r\n}, {\r\n  \"stop_suburb\": \"Ripponlea\",\r\n  \"stop_name\": \"Ripponlea Station\",\r\n  \"stop_latitude\": -37.8759079,\r\n  \"stop_longitude\": 144.995239\r\n}, {\r\n  \"stop_suburb\": \"Abbotsford\",\r\n  \"stop_name\": \"Victoria Park Station\",\r\n  \"stop_latitude\": -37.7991562,\r\n  \"stop_longitude\": 144.994446\r\n}, {\r\n  \"stop_suburb\": \"Abbotsford\",\r\n  \"stop_name\": \"Collingwood Station\",\r\n  \"stop_latitude\": -37.8045235,\r\n  \"stop_longitude\": 144.993744\r\n}, {\r\n  \"stop_suburb\": \"Balaclava\",\r\n  \"stop_name\": \"Balaclava Station\",\r\n  \"stop_latitude\": -37.8694878,\r\n  \"stop_longitude\": 144.993515\r\n}, {\r\n  \"stop_suburb\": \"Northcote\",\r\n  \"stop_name\": \"Merri Station\",\r\n  \"stop_latitude\": -37.7778435,\r\n  \"stop_longitude\": 144.992981\r\n}, {\r\n  \"stop_suburb\": \"Richmond\",\r\n  \"stop_name\": \"North Richmond Station\",\r\n  \"stop_latitude\": -37.8103943,\r\n  \"stop_longitude\": 144.9925\r\n}, {\r\n  \"stop_suburb\": \"Fitzroy North\",\r\n  \"stop_name\": \"Rushall Station\",\r\n  \"stop_latitude\": -37.78322,\r\n  \"stop_longitude\": 144.9924\r\n}, {\r\n  \"stop_suburb\": \"South Yarra\",\r\n  \"stop_name\": \"South Yarra Station\",\r\n  \"stop_latitude\": -37.8384438,\r\n  \"stop_longitude\": 144.99234\r\n}, {\r\n  \"stop_suburb\": \"Windsor\",\r\n  \"stop_name\": \"Windsor Station\",\r\n  \"stop_latitude\": -37.8560524,\r\n  \"stop_longitude\": 144.992035\r\n}, {\r\n  \"stop_suburb\": \"Richmond\",\r\n  \"stop_name\": \"West Richmond Station\",\r\n  \"stop_latitude\": -37.8149452,\r\n  \"stop_longitude\": 144.991425\r\n}, {\r\n  \"stop_suburb\": \"Richmond\",\r\n  \"stop_name\": \"Richmond Station\",\r\n  \"stop_latitude\": -37.8240738,\r\n  \"stop_longitude\": 144.990158\r\n}, {\r\n  \"stop_suburb\": \"Prahran\",\r\n  \"stop_name\": \"Prahran Station\",\r\n  \"stop_latitude\": -37.8495178,\r\n  \"stop_longitude\": 144.989853\r\n}, {\r\n  \"stop_suburb\": \"Brighton\",\r\n  \"stop_name\": \"Brighton Beach Station\",\r\n  \"stop_latitude\": -37.9264832,\r\n  \"stop_longitude\": 144.989151\r\n}, {\r\n  \"stop_suburb\": \"East Melbourne\",\r\n  \"stop_name\": \"Jolimont-MCG Station\",\r\n  \"stop_latitude\": -37.81653,\r\n  \"stop_longitude\": 144.9841\r\n}, {\r\n  \"stop_suburb\": \"Melbourne City\",\r\n  \"stop_name\": \"Parliament Station\",\r\n  \"stop_latitude\": -37.8110542,\r\n  \"stop_longitude\": 144.9729\r\n}, {\r\n  \"stop_suburb\": \"Melbourne City\",\r\n  \"stop_name\": \"Flinders Street Station\",\r\n  \"stop_latitude\": -37.81831,\r\n  \"stop_longitude\": 144.966965\r\n}, {\r\n  \"stop_suburb\": \"Coburg\",\r\n  \"stop_name\": \"Coburg Station\",\r\n  \"stop_latitude\": -37.74234,\r\n  \"stop_longitude\": 144.963348\r\n}, {\r\n  \"stop_suburb\": \"Coburg North\",\r\n  \"stop_name\": \"Batman Station\",\r\n  \"stop_latitude\": -37.7335243,\r\n  \"stop_longitude\": 144.96283\r\n}, {\r\n  \"stop_suburb\": \"Melbourne City\",\r\n  \"stop_name\": \"Melbourne Central Station\",\r\n  \"stop_latitude\": -37.8099365,\r\n  \"stop_longitude\": 144.9626\r\n}, {\r\n  \"stop_suburb\": \"Coburg\",\r\n  \"stop_name\": \"Moreland Station\",\r\n  \"stop_latitude\": -37.7544823,\r\n  \"stop_longitude\": 144.961823\r\n}, {\r\n  \"stop_suburb\": \"Coburg North\",\r\n  \"stop_name\": \"Merlynston Station\",\r\n  \"stop_latitude\": -37.7209358,\r\n  \"stop_longitude\": 144.961319\r\n}, {\r\n  \"stop_suburb\": \"Brunswick\",\r\n  \"stop_name\": \"Anstey Station\",\r\n  \"stop_latitude\": -37.76124,\r\n  \"stop_longitude\": 144.9607\r\n}, {\r\n  \"stop_suburb\": \"Fawkner\",\r\n  \"stop_name\": \"Fawkner Station\",\r\n  \"stop_latitude\": -37.7146225,\r\n  \"stop_longitude\": 144.960556\r\n}, {\r\n  \"stop_suburb\": \"Brunswick\",\r\n  \"stop_name\": \"Brunswick Station\",\r\n  \"stop_latitude\": -37.76772,\r\n  \"stop_longitude\": 144.9596\r\n}, {\r\n  \"stop_suburb\": \"Glenroy\",\r\n  \"stop_name\": \"Gowrie Station\",\r\n  \"stop_latitude\": -37.700676,\r\n  \"stop_longitude\": 144.958878\r\n}, {\r\n  \"stop_suburb\": \"Brunswick\",\r\n  \"stop_name\": \"Jewell Station\",\r\n  \"stop_latitude\": -37.7749825,\r\n  \"stop_longitude\": 144.95871\r\n}, {\r\n  \"stop_suburb\": \"Melbourne City\",\r\n  \"stop_name\": \"Flagstaff Station\",\r\n  \"stop_latitude\": -37.8119774,\r\n  \"stop_longitude\": 144.955658\r\n}, {\r\n  \"stop_suburb\": \"Melbourne City\",\r\n  \"stop_name\": \"Southern Cross Station\",\r\n  \"stop_latitude\": -37.8183327,\r\n  \"stop_longitude\": 144.95253\r\n}, {\r\n  \"stop_suburb\": \"Parkville\",\r\n  \"stop_name\": \"Royal Park Station\",\r\n  \"stop_latitude\": -37.7811928,\r\n  \"stop_longitude\": 144.9523\r\n}, {\r\n  \"stop_suburb\": \"Coolaroo\",\r\n  \"stop_name\": \"Upfield Station\",\r\n  \"stop_latitude\": -37.6660767,\r\n  \"stop_longitude\": 144.946747\r\n}, {\r\n  \"stop_suburb\": \"Craigieburn\",\r\n  \"stop_name\": \"Craigieburn Station\",\r\n  \"stop_latitude\": -37.6019249,\r\n  \"stop_longitude\": 144.943314\r\n}, {\r\n  \"stop_suburb\": \"West Melbourne\",\r\n  \"stop_name\": \"North Melbourne Station\",\r\n  \"stop_latitude\": -37.80631,\r\n  \"stop_longitude\": 144.941513\r\n}, {\r\n  \"stop_suburb\": \"North Melbourne\",\r\n  \"stop_name\": \"Flemington Bridge Station\",\r\n  \"stop_latitude\": -37.7881355,\r\n  \"stop_longitude\": 144.939316\r\n}, {\r\n  \"stop_suburb\": \"North Melbourne\",\r\n  \"stop_name\": \"Macaulay Station\",\r\n  \"stop_latitude\": -37.7942619,\r\n  \"stop_longitude\": 144.936172\r\n}, {\r\n  \"stop_suburb\": \"Roxburgh Park\",\r\n  \"stop_name\": \"Roxburgh Park Station\",\r\n  \"stop_latitude\": -37.6382332,\r\n  \"stop_longitude\": 144.93541\r\n}, {\r\n  \"stop_suburb\": \"Kensington\",\r\n  \"stop_name\": \"Kensington Station\",\r\n  \"stop_latitude\": -37.7937775,\r\n  \"stop_longitude\": 144.930527\r\n}, {\r\n  \"stop_suburb\": \"Flemington\",\r\n  \"stop_name\": \"Newmarket Station\",\r\n  \"stop_latitude\": -37.7873268,\r\n  \"stop_longitude\": 144.928986\r\n}, {\r\n  \"stop_suburb\": \"Pascoe Vale\",\r\n  \"stop_name\": \"Pascoe Vale Station\",\r\n  \"stop_latitude\": -37.7307549,\r\n  \"stop_longitude\": 144.928192\r\n}, {\r\n  \"stop_suburb\": \"Strathmore\",\r\n  \"stop_name\": \"Strathmore Station\",\r\n  \"stop_latitude\": -37.74359,\r\n  \"stop_longitude\": 144.927322\r\n}, {\r\n  \"stop_suburb\": \"Coolaroo\",\r\n  \"stop_name\": \"Coolaroo Station\",\r\n  \"stop_latitude\": -37.661,\r\n  \"stop_longitude\": 144.926056\r\n}, {\r\n  \"stop_suburb\": \"Kensington\",\r\n  \"stop_name\": \"South Kensington Station\",\r\n  \"stop_latitude\": -37.7995338,\r\n  \"stop_longitude\": 144.925476\r\n}, {\r\n  \"stop_suburb\": \"Ascot Vale\",\r\n  \"stop_name\": \"Ascot Vale Station\",\r\n  \"stop_latitude\": -37.77531,\r\n  \"stop_longitude\": 144.921829\r\n}, {\r\n  \"stop_suburb\": \"Oak Park\",\r\n  \"stop_name\": \"Oak Park Station\",\r\n  \"stop_latitude\": -37.71795,\r\n  \"stop_longitude\": 144.921509\r\n}, {\r\n  \"stop_suburb\": \"Essendon\",\r\n  \"stop_name\": \"Glenbervie Station\",\r\n  \"stop_latitude\": -37.7472153,\r\n  \"stop_longitude\": 144.920944\r\n}, {\r\n  \"stop_suburb\": \"Broadmeadows\",\r\n  \"stop_name\": \"Broadmeadows Station\",\r\n  \"stop_latitude\": -37.6830521,\r\n  \"stop_longitude\": 144.919617\r\n}, {\r\n  \"stop_suburb\": \"Moonee Ponds\",\r\n  \"stop_name\": \"Moonee Ponds Station\",\r\n  \"stop_latitude\": -37.7657051,\r\n  \"stop_longitude\": 144.919159\r\n}, {\r\n  \"stop_suburb\": \"Glenroy\",\r\n  \"stop_name\": \"Glenroy Station\",\r\n  \"stop_latitude\": -37.7045326,\r\n  \"stop_longitude\": 144.917221\r\n}, {\r\n  \"stop_suburb\": \"Essendon\",\r\n  \"stop_name\": \"Essendon Station\",\r\n  \"stop_latitude\": -37.75601,\r\n  \"stop_longitude\": 144.9162\r\n}, {\r\n  \"stop_suburb\": \"Glenroy\",\r\n  \"stop_name\": \"Jacana Station\",\r\n  \"stop_latitude\": -37.6951332,\r\n  \"stop_longitude\": 144.915848\r\n}, {\r\n  \"stop_suburb\": \"Flemington\",\r\n  \"stop_name\": \"Flemington Racecourse Station\",\r\n  \"stop_latitude\": -37.7871971,\r\n  \"stop_longitude\": 144.9076\r\n}, {\r\n  \"stop_suburb\": \"Williamstown\",\r\n  \"stop_name\": \"Williamstown Station\",\r\n  \"stop_latitude\": -37.8677559,\r\n  \"stop_longitude\": 144.905319\r\n}, {\r\n  \"stop_suburb\": \"Footscray\",\r\n  \"stop_name\": \"Footscray Station\",\r\n  \"stop_latitude\": -37.8010864,\r\n  \"stop_longitude\": 144.9032\r\n}, {\r\n  \"stop_suburb\": \"Seddon\",\r\n  \"stop_name\": \"Seddon Station\",\r\n  \"stop_latitude\": -37.8090019,\r\n  \"stop_longitude\": 144.89566\r\n}, {\r\n  \"stop_suburb\": \"Williamstown\",\r\n  \"stop_name\": \"Williamstown Beach Station\",\r\n  \"stop_latitude\": -37.8639832,\r\n  \"stop_longitude\": 144.894485\r\n}, {\r\n  \"stop_suburb\": \"Footscray\",\r\n  \"stop_name\": \"Middle Footscray Station\",\r\n  \"stop_latitude\": -37.8025,\r\n  \"stop_longitude\": 144.891479\r\n}, {\r\n  \"stop_suburb\": \"Yarraville\",\r\n  \"stop_name\": \"Yarraville Station\",\r\n  \"stop_latitude\": -37.81585,\r\n  \"stop_longitude\": 144.889938\r\n}, {\r\n  \"stop_suburb\": \"Williamstown\",\r\n  \"stop_name\": \"North Williamstown Station\",\r\n  \"stop_latitude\": -37.85733,\r\n  \"stop_longitude\": 144.889069\r\n}, {\r\n  \"stop_suburb\": \"Spotswood\",\r\n  \"stop_name\": \"Spotswood Station\",\r\n  \"stop_latitude\": -37.8306351,\r\n  \"stop_longitude\": 144.885941\r\n}, {\r\n  \"stop_suburb\": \"West Footscray\",\r\n  \"stop_name\": \"West Footscray Station\",\r\n  \"stop_latitude\": -37.8018036,\r\n  \"stop_longitude\": 144.883987\r\n}, {\r\n  \"stop_suburb\": \"Newport\",\r\n  \"stop_name\": \"Newport Station\",\r\n  \"stop_latitude\": -37.8427124,\r\n  \"stop_longitude\": 144.8836\r\n}, {\r\n  \"stop_suburb\": \"West Footscray\",\r\n  \"stop_name\": \"Tottenham Station\",\r\n  \"stop_latitude\": -37.7992554,\r\n  \"stop_longitude\": 144.862946\r\n}, {\r\n  \"stop_suburb\": \"Seaholme\",\r\n  \"stop_name\": \"Seaholme Station\",\r\n  \"stop_latitude\": -37.8678436,\r\n  \"stop_longitude\": 144.840958\r\n}, {\r\n  \"stop_suburb\": \"Sunshine\",\r\n  \"stop_name\": \"Sunshine Station\",\r\n  \"stop_latitude\": -37.7877426,\r\n  \"stop_longitude\": 144.83197\r\n}, {\r\n  \"stop_suburb\": \"Altona\",\r\n  \"stop_name\": \"Altona Station\",\r\n  \"stop_latitude\": -37.86715,\r\n  \"stop_longitude\": 144.829651\r\n}, {\r\n  \"stop_suburb\": \"Sunshine North\",\r\n  \"stop_name\": \"Albion Station\",\r\n  \"stop_latitude\": -37.7776566,\r\n  \"stop_longitude\": 144.8247\r\n}, {\r\n  \"stop_suburb\": \"Altona\",\r\n  \"stop_name\": \"Westona Station\",\r\n  \"stop_latitude\": -37.8651657,\r\n  \"stop_longitude\": 144.813492\r\n}, {\r\n  \"stop_suburb\": \"St Albans\",\r\n  \"stop_name\": \"Ginifer Station\",\r\n  \"stop_latitude\": -37.760067,\r\n  \"stop_longitude\": 144.811356\r\n}, {\r\n  \"stop_suburb\": \"St Albans\",\r\n  \"stop_name\": \"St Albans Station\",\r\n  \"stop_latitude\": -37.7448578,\r\n  \"stop_longitude\": 144.800049\r\n}, {\r\n  \"stop_suburb\": \"St Albans\",\r\n  \"stop_name\": \"Keilor Plains Station\",\r\n  \"stop_latitude\": -37.7292747,\r\n  \"stop_longitude\": 144.793732\r\n}, {\r\n  \"stop_suburb\": \"Sydenham\",\r\n  \"stop_name\": \"Watergardens Station\",\r\n  \"stop_latitude\": -37.7011261,\r\n  \"stop_longitude\": 144.774185\r\n}, {\r\n  \"stop_suburb\": \"Laverton\",\r\n  \"stop_name\": \"Laverton Station\",\r\n  \"stop_latitude\": -37.8636932,\r\n  \"stop_longitude\": 144.772614\r\n}, {\r\n  \"stop_suburb\": \"Laverton\",\r\n  \"stop_name\": \"Aircraft Station\",\r\n  \"stop_latitude\": -37.8666039,\r\n  \"stop_longitude\": 144.7608\r\n}, {\r\n  \"stop_suburb\": \"Williams Landing\",\r\n  \"stop_name\": \"Williams Landing Station\",\r\n  \"stop_latitude\": -37.86987,\r\n  \"stop_longitude\": 144.747452\r\n}, {\r\n  \"stop_suburb\": \"Sunbury\",\r\n  \"stop_name\": \"Sunbury Station\",\r\n  \"stop_latitude\": -37.57909,\r\n  \"stop_longitude\": 144.727325\r\n}, {\r\n  \"stop_suburb\": \"Diggers Rest\",\r\n  \"stop_name\": \"Diggers Rest Station\",\r\n  \"stop_latitude\": -37.6270142,\r\n  \"stop_longitude\": 144.719925\r\n}, {\r\n  \"stop_suburb\": \"Hoppers Crossing\",\r\n  \"stop_name\": \"Hoppers Crossing Station\",\r\n  \"stop_latitude\": -37.8832779,\r\n  \"stop_longitude\": 144.700958\r\n}, {\r\n  \"stop_suburb\": \"Werribee\",\r\n  \"stop_name\": \"Werribee Station\",\r\n  \"stop_latitude\": -37.8993835,\r\n  \"stop_longitude\": 144.661118\r\n}];\r\n\r\nexport default stops;","import stops from '../data/stopsLatLon';\r\n\r\n//Source: https://stackoverflow.com/q/18883601\r\nfunction getDistanceFromLatLonInKm(lat1,lon1,lat2,lon2) {\r\n    var R = 6371; // Radius of the earth in km\r\n    var dLat = deg2rad(lat2-lat1);  // deg2rad below\r\n    var dLon = deg2rad(lon2-lon1);\r\n    var a =\r\n      Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n      Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) *\r\n      Math.sin(dLon/2) * Math.sin(dLon/2)\r\n      ;\r\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\r\n    var d = R * c; // Distance in km\r\n    return d;\r\n  }\r\n\r\nfunction deg2rad(deg) {\r\n    return deg * (Math.PI/180)\r\n}\r\n\r\nfunction findClosestStops(lat, lon) {\r\n  let nearbyStops = [];\r\n  const offset = 0.02;\r\n  for (const stop of stops) {\r\n    const lonDiff = stop.stop_longitude - lon;\r\n    const latDiff = stop.stop_latitude - lat;\r\n\r\n    if (lonDiff > -offset && lonDiff < offset\r\n      && latDiff > -offset && latDiff < offset) {\r\n      nearbyStops.push(stop);\r\n    }\r\n  }\r\n\r\n  const results = nearbyStops.map(x => {\r\n      return {\r\n        stop_name: x.stop_name,\r\n        distance: getDistanceFromLatLonInKm(lat, lon, x.stop_latitude, x.stop_longitude),\r\n        latitude: x.stop_latitude,\r\n        longitude: x.stop_longitude\r\n      }\r\n    })\r\n    .sort((a, b) => a.distance - b.distance);\r\n\r\n  return results;\r\n}\r\n\r\nexport default findClosestStops;","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport Search from './components/search';\nimport Footer from './components/footer';\nimport axios from 'axios';\nimport SearchResult from './components/searchResult';\nimport findClosestStops from './utils/distance'\nimport { isArchivedInStorage, loadSearchParamsFromLocalStorage, saveSearchParamsToLocalStorage } from './utils/localStorageHelper';\nimport DomainListingWrapper from './types/domain';\n\n//https://css-tricks.com/snippets/javascript/get-url-variables/\nconst getQueryVariable = function(variable) {\n    var query = window.location.search.substring(1);\n    var vars = query.split(\"&\");\n    for (var i=0;i<vars.length;i++) {\n        var pair = vars[i].split(\"=\");\n        if(pair[0] === variable){return pair[1];}\n    }\n    return false;\n};\n\ninterface DomainListingWrapperWithClosestStops extends DomainListingWrapper {\n    closestStops: Array<ClosestStop>;\n}\n\ninterface ClosestStop {\n    stop_name: string;\n    distance: number;\n    latitude: number;\n    longitude: number;\n}\n\nfunction App() {\n  const suburbsFromQueryString = getQueryVariable('suburbs');\n  const savedSearchParams = loadSearchParamsFromLocalStorage() ?? {};\n\n  const defaultSuburbs = savedSearchParams.suburbCsv ?? (suburbsFromQueryString ? decodeURI((suburbsFromQueryString)) : '');\n  const [suburbs, setSuburbs] = React.useState(defaultSuburbs);\n  const [minBeds, setMinBeds] = React.useState(savedSearchParams.minBeds ?? 2);\n  const [minBaths, setMinBaths] = React.useState(savedSearchParams.minBaths ?? 1);\n  const [minCarSpaces, setMinCarSpaces] = React.useState(savedSearchParams.minCarSpaces ?? 1);\n  const [maxPrice, setMaxPrice] = React.useState(savedSearchParams.maxPrice ?? 650000);\n  const [maxDistanceFromTrain, setMaxDistanceFromTrain] = React.useState(savedSearchParams.maxDistFromTrain ?? 1.25);\n\n  const [results, setResults] = React.useState(new Array<DomainListingWrapperWithClosestStops>());\n  const [searchResultList, setSearchResultList] = React.useState(new Array<JSX.Element>());\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [showArchived, setShowArchived] = React.useState(false);\n  const [requestedSuburbs, setRequestedSuburbs] = React.useState('');\n  const [suburbCountsString, setSuburbCountsString] = React.useState('');\n  const [resultsCount, setResultsCount] = React.useState(0);\n\n  const setStateFromChangeEvent = function(evt, setFunc) {\n      setFunc(evt.currentTarget.value);\n  }\n\n  const setResultsWithClosestStops = function(r: DomainListingWrapper[]) {\n    const resultsWithClosestStops: DomainListingWrapperWithClosestStops[] = r\n        .filter(x => {\n            return x?.listing?.propertyDetails\n                && x.listing.propertyDetails.latitude\n                && x.listing.propertyDetails.longitude;\n        })\n        .map(x => {\n            const closestStops: ClosestStop[] = findClosestStops(x.listing.propertyDetails.latitude, x.listing.propertyDetails.longitude);\n            return { ...x, closestStops: closestStops };\n        })\n        .filter(x => {\n            return x.closestStops.length > 0\n                && Math.round(x.closestStops[0].distance * 10) / 10 <= maxDistanceFromTrain;\n        });\n    setResults(resultsWithClosestStops);\n  }\n\n  const runSearch = async function() {\n    const reqSuburbs = suburbs\n        .split(',')\n        .map(x => x.trim())\n        .sort()\n        .join(', ');\n    setRequestedSuburbs(reqSuburbs);\n    saveSearchParamsToLocalStorage(minBeds, minBaths, minCarSpaces, maxPrice, maxDistanceFromTrain, reqSuburbs);\n    const key = getQueryVariable('api_key');\n    const url = 'https://api.domain.com.au/v1/listings/residential/_search?api_key=' + key;\n    const suburbArray = suburbs.split(',').map((s) => {\n        return {\n              \"state\":\"VIC\",\n              \"suburb\":s.trim()\n            };\n    });\n    const data = {\n      \"listingType\":\"Sale\",\n      \"propertyTypes\":[\n        \"House\",\n        \"NewApartments\",\n        \"ApartmentUnitFlat\",\n        \"Townhouse\"\n      ],\n      \"listingAttributes\": [\n        \"NotUnderContract\"\n      ],\n      \"minBedrooms\":minBeds,\n      \"minBathrooms\":minBaths,\n      \"minCarspaces\":minCarSpaces,\n      \"maxPrice\":maxPrice,\n      \"locations\":suburbArray,\n      \"sort\": {\n        \"sortKey\": \"DateListed\",\n        \"direction\": \"Descending\"\n      },\n      \"pageSize\": 200\n    };\n\n    if (key) {\n        setIsLoading(true);\n        await axios.post(url, data)\n            .then(x => {\n                setIsLoading(false);\n                setResultsWithClosestStops(x.data);\n            })\n            .catch(err => {\n                setIsLoading(false);\n                console.error(err);\n            });\n    } else {\n        setIsLoading(true);\n        await axios.get('https://scottabutler.github.io/domain-react-spa/static-data.json')\n            .then(x => {\n                setIsLoading(false);\n                setResultsWithClosestStops(x.data);\n            })\n            .catch(err => {\n                setIsLoading(false);\n                console.error(err);\n            });\n    }\n  }\n\n  const spinner = isLoading\n    ? (\n        <div className=\"spinner-border\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n        </div>\n    )\n    : <></>\n\n  React.useEffect(() => {\n    const list = results && results.length > 0\n        ? results.map(x =>\n            <SearchResult\n                key={x.listing.listingSlug}\n                closestStops={x.closestStops}\n                data={x}\n                showArchived={showArchived}\n            />)\n        : [];\n    setSearchResultList(list);\n\n    const suburbCounts = {};\n    let hiddenResultCount = 0;\n    results.map(x => {\n        if (x?.listing?.propertyDetails) {\n            const upperCaseSuburb = x.listing.propertyDetails.suburb.toUpperCase();\n            if (suburbCounts[upperCaseSuburb]) {\n                suburbCounts[upperCaseSuburb]++;\n            } else {\n                suburbCounts[upperCaseSuburb] = 1;\n            }\n        }\n        if (isArchivedInStorage(x.listing.listingSlug)) {\n            hiddenResultCount += 1; // TODO convert this to a map for immutability?\n        }\n    });\n    setResultsCount(showArchived ? list.length : list.length - hiddenResultCount);\n    const orderedSuburbCounts = orderObjectPropertiesByCount(suburbCounts);\n    let counts: string[] = [];\n    for (const s in orderedSuburbCounts) {\n        counts.push(`${toTitleCase(s)} (${orderedSuburbCounts[s]})`);\n    }\n\n    // Add in any that suburbs from the search that didn't have any search results\n    const requestedSuburbsArray = requestedSuburbs.split(', ').filter(r => !!r);\n    const keys = Object.keys(orderedSuburbCounts);\n    for (const r of requestedSuburbsArray) {\n        if (!keys.find(x => x === r.toUpperCase())) {\n            counts.push(`${toTitleCase(r)} (0)`);\n        }\n    }\n    setSuburbCountsString(counts.join(', '));\n  }, [results, showArchived]);\n\n  function toTitleCase(input) {\n    return input.split(' ')\n        .map(w => w[0].toUpperCase() + w.substr(1).toLowerCase())\n        .join(' ');\n  }\n\n  function orderObjectPropertiesByCount(obj) {\n    const keys = Object.keys(obj);\n    const sorted = keys.sort(function(a,b){return obj[b]-obj[a]});\n    const result = {};\n    for (const k in sorted) {\n        const sortedKey = sorted[k];\n        result[sortedKey] = obj[sortedKey];\n    };\n    return result;\n  }\n\n  return (\n    <div className=\"App py-2 container-fluid\">\n      <h3 className=\"py-2 bg-light\">Domain Property Search</h3>\n\n      <div className=\"row mt-3\">\n          <div className=\"col-12 mb-2 pb-2 pb-sm-0\">\n              <div className=\"border border-secondary rounded bg-white p-2\">\n                  <Search\n                      suburbs={suburbs} updateSuburbs={(evt) => setStateFromChangeEvent(evt, setSuburbs)}\n                      minBeds={minBeds} updateMinBeds={(val) => setMinBeds(val)}\n                      minBaths={minBaths} updateMinBaths={(val) => setMinBaths(val)}\n                      minCarSpaces={minCarSpaces} updateMinCarSpaces={(val) => setMinCarSpaces(val)}\n                      maxPrice={maxPrice} updateMaxPrice={(val) => setMaxPrice(val)}\n                      maxDistanceFromTrain={maxDistanceFromTrain} updateMaxDistanceFromTrain={(val) => setMaxDistanceFromTrain(val)}\n                      runSearch={runSearch}\n                  />\n              </div>\n          </div>\n      </div>\n      <div className=\"row\" id=\"searchResultsContainer\">\n        <div className=\"col-12\">\n          <div className=\"border border-secondary rounded bg-white p-2 px-3\" id=\"output\">\n            {isLoading\n            ? spinner\n            : <>\n                {results && results.length > 0 && requestedSuburbs\n                ?\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <span>Showing {resultsCount} properties in {suburbCountsString}</span>\n                        </div>\n                        <div className=\"col-12\">\n                            <input id=\"showArchivedCheckbox\" type=\"checkbox\" defaultChecked={showArchived} onChange={() => { setShowArchived(!showArchived) }} />\n                            <label htmlFor=\"showArchivedCheckbox\">Show hidden properties</label>\n                        </div>\n                    </div>\n                : <></>\n                }\n                <div className={`d-flex flex-wrap ${searchResultList.length > 0 ? 'justify-content-around justify-content-md-start' : ''}`}>{\n                    searchResultList.length > 0\n                        ? searchResultList\n                        : <span className=\"d-block\">No properties found.</span>\n                }</div>\n            </>\n            }\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}